{"ast":null,"code":"import _classCallCheck from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kevinfoesenek/Desktop/Linked_frontend/src/components/Navbars/AdminNavbar.jsx\";\n\n/*!\n\n=========================================================\n* Black Dashboard React v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // reactstrap components\n\nimport { Alert, Collapse, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledDropdown, NavbarBrand, Navbar, NavLink, Nav, Container, UncontrolledAlert } from \"reactstrap\";\n\nvar AdminNavbar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AdminNavbar, _React$Component);\n\n  function AdminNavbar(props) {\n    var _this;\n\n    _classCallCheck(this, AdminNavbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminNavbar).call(this, props));\n\n    _this.updateColor = function () {\n      if (window.innerWidth < 993 && _this.state.collapseOpen) {\n        _this.setState({\n          color: \"bg-white\"\n        });\n      } else {\n        _this.setState({\n          color: \"navbar-transparent\"\n        });\n      }\n    };\n\n    _this.toggleCollapse = function () {\n      if (_this.state.collapseOpen) {\n        _this.setState({\n          color: \"navbar-transparent\"\n        });\n      } else {\n        _this.setState({\n          color: \"bg-white\"\n        });\n      }\n\n      _this.setState({\n        collapseOpen: !_this.state.collapseOpen\n      });\n    };\n\n    _this.state = {\n      collapseOpen: false,\n      color: \"navbar-transparent\"\n    };\n    return _this;\n  }\n\n  _createClass(AdminNavbar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //setInterval(() => this.setState({ time: Date.now()}), 3)\n      window.addEventListener(\"resize\", this.updateColor);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.updateColor);\n    } // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.metamask);\n      var url = \"https://etherscan.io/address/\" + this.props.coinbase;\n      return React.createElement(React.Fragment, null, React.createElement(Navbar, {\n        className: classNames(\"navbar-absolute\", this.state.color),\n        expand: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classNames(\"navbar-toggle d-inline\", {\n          toggled: this.props.sidebarOpened\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"navbar-toggler\",\n        type: \"button\",\n        onClick: this.props.toggleSidebar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))), React.createElement(NavbarBrand, {\n        href: \"#pablo\",\n        onClick: function onClick(e) {\n          return e.preventDefault();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, this.props.brandText)), React.createElement(\"div\", {\n        className: \"section section-notifications\",\n        id: \"notifications\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(UncontrolledAlert, {\n        className: \"alert-with-icon\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"data-notify\": \"icon\",\n        className: \"tim-icons icon-alert-circle-exc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Alpha release -\"), React.createElement(\"a\", {\n        href: \"https://faucet.metamask.io/\",\n        className: \"text-white\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"This application runs on the ropsten testnet! ONLY USE TEST ETHER!\"))))), React.createElement(Alert, {\n        color: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"This is a plain notification\")), React.createElement(\"button\", {\n        \"aria-expanded\": false,\n        \"aria-label\": \"Toggle navigation\",\n        className: \"navbar-toggler\",\n        \"data-target\": \"#navigation\",\n        \"data-toggle\": \"collapse\",\n        id: \"navigation\",\n        type: \"button\",\n        onClick: this.toggleCollapse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(Collapse, {\n        navbar: true,\n        isOpen: this.state.collapseOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        className: \"ml-auto\",\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(UncontrolledDropdown, {\n        nav: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        caret: true,\n        color: \"default\",\n        \"data-toggle\": \"dropdown\",\n        nav: true,\n        onClick: function onClick(e) {\n          return e.preventDefault();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"photo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"...\",\n        src: require(\"../../assets/img/anime3.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(\"b\", {\n        className: \"caret d-none d-lg-block d-xl-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"d-lg-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Account\")), React.createElement(DropdownMenu, {\n        className: \"dropdown-navbar\",\n        right: true,\n        tag: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        tag: \"li\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        className: \"nav-item\",\n        href: url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, this.props.coinbase)))), React.createElement(\"li\", {\n        className: \"separator d-lg-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return AdminNavbar;\n}(React.Component);\n\nexport default AdminNavbar;","map":{"version":3,"sources":["/Users/kevinfoesenek/Desktop/Linked_frontend/src/components/Navbars/AdminNavbar.jsx"],"names":["React","classNames","Alert","Collapse","DropdownToggle","DropdownMenu","DropdownItem","UncontrolledDropdown","NavbarBrand","Navbar","NavLink","Nav","Container","UncontrolledAlert","AdminNavbar","props","updateColor","window","innerWidth","state","collapseOpen","setState","color","toggleCollapse","addEventListener","removeEventListener","console","log","metamask","url","coinbase","toggled","sidebarOpened","toggleSidebar","e","preventDefault","brandText","require","Component"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Black Dashboard React v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Alert,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  UncontrolledAlert,\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapseOpen: false,\n      color: \"navbar-transparent\",\n    };\n  }\n  componentDidMount() {\n    //setInterval(() => this.setState({ time: Date.now()}), 3)\n    window.addEventListener(\"resize\", this.updateColor);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateColor);\n  }\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  updateColor = () => {\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\n      this.setState({\n        color: \"bg-white\"\n      });\n    } else {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  toggleCollapse = () => {\n    if (this.state.collapseOpen) {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"bg-white\"\n      });\n    }\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  render() {\n    console.log(this.props.metamask);\n    var url = \"https://etherscan.io/address/\"+this.props.coinbase;\n    return (\n      <>\n        <Navbar\n          className={classNames(\"navbar-absolute\", this.state.color)}\n          expand=\"lg\"\n        >\n          <Container fluid>\n            <div className=\"navbar-wrapper\">\n              <div\n                className={classNames(\"navbar-toggle d-inline\", {\n                  toggled: this.props.sidebarOpened\n                })}\n              >\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={this.props.toggleSidebar}\n                >\n                  <span className=\"navbar-toggler-bar bar1\" />\n                  <span className=\"navbar-toggler-bar bar2\" />\n                  <span className=\"navbar-toggler-bar bar3\" />\n                </button>\n              </div>\n              <NavbarBrand href=\"#pablo\" onClick={e => e.preventDefault()}>\n                {this.props.brandText}\n              </NavbarBrand>\n            </div>\n            <div className=\"section section-notifications\" id=\"notifications\">\n                  <Container>\n                      <UncontrolledAlert\n                        className=\"alert-with-icon\"\n                        color=\"danger\">\n                            <span data-notify=\"icon\" className=\"tim-icons icon-alert-circle-exc\" />\n                            <span>\n                              <b>Alpha release -</b>\n                                <a href= \"https://faucet.metamask.io/\"\n                                  className=\"text-white\"\n                                  target=\"_blank\"\n                                  rel=\"noopener noreferrer\"\n                                >\n                                This application runs on the ropsten testnet!\n                                ONLY USE TEST ETHER!\n                                </a>\n                            </span>\n                      </UncontrolledAlert>\n                  </Container>\n            </div>\n\n            <Alert color=\"info\">\n                <span>This is a plain notification</span>\n            </Alert>\n\n\n            <button\n              aria-expanded={false}\n              aria-label=\"Toggle navigation\"\n              className=\"navbar-toggler\"\n              data-target=\"#navigation\"\n              data-toggle=\"collapse\"\n              id=\"navigation\"\n              type=\"button\"\n              onClick={this.toggleCollapse}\n            >\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n            </button>\n            <Collapse navbar isOpen={this.state.collapseOpen}>\n              <Nav className=\"ml-auto\" navbar>\n                <UncontrolledDropdown nav>\n                  <DropdownToggle\n                    caret\n                    color=\"default\"\n                    data-toggle=\"dropdown\"\n                    nav\n                    onClick={e => e.preventDefault()}\n                  >\n                    <div className=\"photo\">\n                      <img alt=\"...\" src={require(\"../../assets/img/anime3.png\")} />\n                    </div>\n                    <b className=\"caret d-none d-lg-block d-xl-block\" />\n                    <p className=\"d-lg-none\">Account</p>\n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                    <NavLink tag=\"li\">\n                      <DropdownItem\n                        className=\"nav-item\"\n                        href={url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                      {this.props.coinbase}\n                      </DropdownItem>\n                    </NavLink>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <li className=\"separator d-lg-none\" />\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n"]},"metadata":{},"sourceType":"module"}