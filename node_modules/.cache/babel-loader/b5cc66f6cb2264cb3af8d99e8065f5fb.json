{"ast":null,"code":"import _defineProperty from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/kevinfoesenek/Desktop/Linked_frontend/src/views/Vault.jsx\";\n\n/*!\n\n=========================================================\n* Black Dashboard React v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // reactstrap components\n\nimport { Button, ButtonGroup, Card, CardHeader, CardBody, CardTitle, Row, Col, Table, FormGroup, Input, Modal, Label, Form, InputGroup, InputGroupAddon, InputGroupText } from \"reactstrap\";\n\nvar Vault =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Vault, _React$Component);\n\n  function Vault(props) {\n    var _this;\n\n    _classCallCheck(this, Vault);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Vault).call(this, props));\n\n    _this.setBgChartData = function (name) {\n      _this.setState({\n        bigChartData: name\n      });\n    };\n\n    _this.toggleModal = function (modalState, id, tokens, ETH, entry) {\n      var _this$setState;\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, modalState, !_this.state[modalState]), _defineProperty(_this$setState, \"dataMiniModal\", [id, tokens, ETH, entry]), _this$setState));\n    };\n\n    _this.createCP = function (receiver) {\n      var web3 = _this.props.web3;\n      var instanceColl = _this.props.instanceColl;\n\n      if (_this.props.web3Available !== \"false\") {\n        web3.eth.getCoinbase().then(function (result) {\n          return instanceColl.methods.openCP(_this.state.CPamountTokenUSD).send({\n            from: result,\n            value: _this.state.CPamountETH\n          });\n        });\n      }\n\n      ;\n    };\n\n    _this.closeCP = function (receiver) {\n      var web3 = _this.props.web3;\n      var instanceColl = _this.props.instanceColl;\n\n      if (_this.props.web3Available !== \"false\") {\n        web3.eth.getCoinbase().then(function (result) {\n          return instanceColl.methods.closeCP(receiver).send({\n            from: result\n          });\n        });\n      }\n\n      ;\n    };\n\n    _this.filterCP = function () {\n      _this.setState({\n        closedCPs: !_this.state.closedCPs\n      });\n    };\n\n    _this.handleChangeETH = _this.handleChangeETH.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeAmountTokenUSD = _this.handleChangeAmountTokenUSD.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeAmountCP = _this.handleChangeAmountCP.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTransferCP = _this.handleTransferCP.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      bigChartData: \"data1\",\n      miniModal: false,\n      formModal: false,\n      formModal_CP: false,\n      dataMiniModal: [],\n      CPamountETH: 0,\n      CPamountTokenUSD: 0,\n      ChangeAmountCP: 0,\n      CPTransfeReceiver: \"\",\n      closedCPs: false\n    };\n    return _this;\n  }\n\n  _createClass(Vault, [{\n    key: \"handleChangeETH\",\n    value: function handleChangeETH(e) {\n      this.setState({\n        CPamountETH: (e.target.value * Math.pow(10, 18)).toLocaleString('fullwide', {\n          useGrouping: false\n        })\n      });\n    }\n  }, {\n    key: \"handleChangeAmountTokenUSD\",\n    value: function handleChangeAmountTokenUSD(e) {\n      this.setState({\n        CPamountTokenUSD: (e.target.value * Math.pow(10, 20)).toLocaleString('fullwide', {\n          useGrouping: false\n        })\n      });\n    }\n  }, {\n    key: \"handleChangeAmountCP\",\n    value: function handleChangeAmountCP(e) {\n      this.setState({\n        ChangeAmountCP: e.target.value.toLocaleString('fullwide', {\n          useGrouping: false\n        })\n      });\n    }\n  }, {\n    key: \"handleTransferCP\",\n    value: function handleTransferCP(e) {\n      this.setState({\n        CPTransfeReceiver: e.target.value\n      });\n      console.log(e.target.value);\n    }\n  }, {\n    key: \"renderTableData\",\n    value: function renderTableData() {\n      if (this.props.indexCP > 0) {\n        var index = this.props.indexCP;\n        var CP = [];\n        var rows = [];\n\n        if (this.props.individualCPs.length > 0) {\n          for (var i = 0; i < index; i++) {\n            CP[i + 1] = this.props.individualCPs[i];\n\n            if (this.state.closedCPs === true) {\n              rows[i] = React.createElement(\"tr\", {\n                key: i,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 121\n                },\n                __self: this\n              }, React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 122\n                },\n                __self: this\n              }, i + 1), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 123\n                },\n                __self: this\n              }, CP[i + 1][2] === true ? \"closed\" : \"open\"), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 124\n                },\n                __self: this\n              }, (CP[i + 1][1] / Math.pow(10, 20)).toLocaleString(undefined, {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n              }), \" LUSD\"), CP[i + 1][2] === true ? React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 128\n                },\n                __self: this\n              }) : React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 129\n                },\n                __self: this\n              }, React.createElement(Button, {\n                className: \"btn-link\",\n                color: \"info\",\n                onClick: this.toggleModal.bind(\"\", \"formModal_CP\", i, CP[i + 1][1], CP[i + 1][0], \"burn tokens\"),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 130\n                },\n                __self: this\n              }, \"burn\"), \" |\", React.createElement(Button, {\n                className: \"btn-link\",\n                color: \"info\",\n                onClick: this.toggleModal.bind(\"\", \"formModal_CP\", i, CP[i + 1][1], CP[i + 1][0], \"mint tokens\"),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 137\n                },\n                __self: this\n              }, \"mint\")), React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 145\n                },\n                __self: this\n              }, (CP[i + 1][0] / Math.pow(10, 18)).toLocaleString(undefined, {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n              }), \" ETH\"), CP[i + 1][2] === true ? React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 149\n                },\n                __self: this\n              }) : React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 149\n                },\n                __self: this\n              }, React.createElement(Button, {\n                className: \"btn-link\",\n                color: \"info\",\n                onClick: this.toggleModal.bind(\"\", \"formModal_CP\", i, CP[i + 1][1], CP[i + 1][0], \"deposit ETH\"),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 150\n                },\n                __self: this\n              }, \"deposit\"), \" |\", React.createElement(Button, {\n                className: \"btn-link\",\n                color: \"info\",\n                onClick: this.toggleModal.bind(\"\", \"formModal_CP\", i, CP[i + 1][1], CP[i + 1][0], \"withdraw ETH\"),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 157\n                },\n                __self: this\n              }, \"withdraw\")), React.createElement(\"td\", {\n                className: \"text-center\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 165\n                },\n                __self: this\n              }, isNaN(CP[i + 1][1] / Math.pow(10, 20) / (CP[i + 1][0] / Math.pow(10, 18))) ? React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 167\n                },\n                __self: this\n              }, \" 0,00 USD \") : React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 169\n                },\n                __self: this\n              }, (CP[i + 1][1] / Math.pow(10, 20) / (CP[i + 1][0] / Math.pow(10, 18)) * 1.5).toLocaleString(undefined, {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n              }), \" USD\")), CP[i + 1][2] === true ? React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 175\n                },\n                __self: this\n              }) : React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 175\n                },\n                __self: this\n              }, \"0,00\"), CP[i + 1][2] === true ? React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 176\n                },\n                __self: this\n              }) : React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 177\n                },\n                __self: this\n              }, React.createElement(Button, {\n                className: \"btn-link\",\n                color: \"info\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 178\n                },\n                __self: this\n              }, \"claim\")), CP[i + 1][2] === true ? React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 185\n                },\n                __self: this\n              }) : React.createElement(\"td\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 186\n                },\n                __self: this\n              }, React.createElement(Button, {\n                className: \"btn-link tim-icons icon-send\",\n                color: \"success\",\n                onClick: this.toggleModal.bind(\"\", \"formModal\", i, CP[i + 1][1], CP[i + 1][0]),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 187\n                },\n                __self: this\n              }), React.createElement(Button, {\n                className: \"btn-link tim-icons icon-simple-remove\",\n                color: \"danger\",\n                onClick: this.toggleModal.bind(\"\", \"miniModal\", i, CP[i + 1][1], CP[i + 1][0]),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 192\n                },\n                __self: this\n              })));\n            } else {\n              if (CP[i + 1][2] === false) {\n                rows[i] = React.createElement(\"tr\", {\n                  key: i,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 202\n                  },\n                  __self: this\n                }, React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 203\n                  },\n                  __self: this\n                }, i + 1), React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 204\n                  },\n                  __self: this\n                }, CP[i + 1][2] === true ? \"closed\" : \"open\"), React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 205\n                  },\n                  __self: this\n                }, (CP[i + 1][1] / Math.pow(10, 20)).toLocaleString(undefined, {\n                  minimumFractionDigits: 2,\n                  maximumFractionDigits: 2\n                }), \" LUSD\"), React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 209\n                  },\n                  __self: this\n                }, React.createElement(Button, {\n                  className: \"btn-link\",\n                  color: \"info\",\n                  onClick: this.toggleModal.bind(\"\", \"formModal_CP\", i, CP[i + 1][1], CP[i + 1][0], \"burn tokens\"),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 210\n                  },\n                  __self: this\n                }, \"burn\"), \" |\", React.createElement(Button, {\n                  className: \"btn-link\",\n                  color: \"info\",\n                  onClick: this.toggleModal.bind(\"\", \"formModal_CP\", i, CP[i + 1][1], CP[i + 1][0], \"mint tokens\"),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 216\n                  },\n                  __self: this\n                }, \"mint\")), React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 224\n                  },\n                  __self: this\n                }, (CP[i + 1][0] / Math.pow(10, 18)).toLocaleString(undefined, {\n                  minimumFractionDigits: 2,\n                  maximumFractionDigits: 2\n                }), \" ETH\"), React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 228\n                  },\n                  __self: this\n                }, React.createElement(Button, {\n                  className: \"btn-link\",\n                  color: \"info\",\n                  onClick: this.toggleModal.bind(\"\", \"formModal_CP\", i, CP[i + 1][1], CP[i + 1][0], \"deposit ETH\"),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 229\n                  },\n                  __self: this\n                }, \"deposit\"), \" |\", React.createElement(Button, {\n                  className: \"btn-link\",\n                  color: \"info\",\n                  onClick: this.toggleModal.bind(\"\", \"formModal_CP\", i, CP[i + 1][1], CP[i + 1][0], \"withdraw ETH\"),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 235\n                  },\n                  __self: this\n                }, \"withdraw\")), React.createElement(\"td\", {\n                  className: \"text-center\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 243\n                  },\n                  __self: this\n                }, isNaN(CP[i + 1][1] / Math.pow(10, 20) / (CP[i + 1][0] / Math.pow(10, 18))) ? React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 245\n                  },\n                  __self: this\n                }, \" 0,00 USD \") : React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 247\n                  },\n                  __self: this\n                }, (CP[i + 1][1] / Math.pow(10, 20) / (CP[i + 1][0] / Math.pow(10, 18)) * 1.5).toLocaleString(undefined, {\n                  minimumFractionDigits: 2,\n                  maximumFractionDigits: 2\n                }), \" USD\")), React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 254\n                  },\n                  __self: this\n                }, \"0,00\"), React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 255\n                  },\n                  __self: this\n                }, React.createElement(Button, {\n                  className: \"btn-link\",\n                  color: \"info\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 256\n                  },\n                  __self: this\n                }, \"claim\")), React.createElement(\"td\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 263\n                  },\n                  __self: this\n                }, React.createElement(Button, {\n                  className: \"btn-link tim-icons icon-send\",\n                  color: \"success\",\n                  onClick: this.toggleModal.bind(\"\", \"formModal\", i, CP[i + 1][1], CP[i + 1][0], \"Transfer\"),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 264\n                  },\n                  __self: this\n                }), React.createElement(Button, {\n                  className: \"btn-link tim-icons icon-simple-remove\",\n                  color: \"danger\",\n                  onClick: this.toggleModal.bind(\"\", \"miniModal\", i, CP[i + 1][1], CP[i + 1][0]),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 269\n                  },\n                  __self: this\n                })));\n              }\n            }\n          }\n        }\n\n        return rows;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var change_tokens = this.state.dataMiniModal[1] / Math.pow(10, 20);\n\n      if (this.state.dataMiniModal[3] === \"burn tokens\") {\n        change_tokens = this.state.dataMiniModal[1] / Math.pow(10, 20);\n        change_tokens = this.state.dataMiniModal[1] / Math.pow(10, 20) - this.state.ChangeAmountCP;\n      } else if (this.state.dataMiniModal[3] === \"mint tokens\") {\n        change_tokens = this.state.dataMiniModal[1] / Math.pow(10, 20);\n        change_tokens = this.state.dataMiniModal[1] / Math.pow(10, 20) + 1 * this.state.ChangeAmountCP;\n      } else {\n        change_tokens = this.state.dataMiniModal[1] / Math.pow(10, 20);\n      }\n\n      var change_ETH = this.state.dataMiniModal[2] / Math.pow(10, 18);\n\n      if (this.state.dataMiniModal[3] === \"deposit ETH\") {\n        change_ETH = this.state.dataMiniModal[2] / Math.pow(10, 18);\n        change_ETH = this.state.dataMiniModal[2] / Math.pow(10, 18) + 1 * this.state.ChangeAmountCP;\n      } else if (this.state.dataMiniModal[3] === \"withdraw ETH\") {\n        change_ETH = this.state.dataMiniModal[2] / Math.pow(10, 18);\n        change_ETH = this.state.dataMiniModal[2] / Math.pow(10, 18) - this.state.ChangeAmountCP;\n      } else {\n        change_ETH = this.state.dataMiniModal[2] / Math.pow(10, 18);\n      }\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \"Collateral Positions\"), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"checkbox\",\n        onClick: this.filterCP,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"form-check-sign\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), \"Show closed\"))), React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: \"tablesorter\",\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"Active\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"Tokens\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"Collateral\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }), React.createElement(\"th\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"Liquidation rate\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"Interest\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, this.renderTableData())), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, \"Current rate: \", (this.props.rateUSD / Math.pow(10, 2)).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }), \" USD\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, \"Interest: 1,5% per year\"))))))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"6\",\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"text-left\",\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"card-category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, \"Create Collateral Position\"), React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-coins text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }), \" \", \"USD\")), React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        className: \"btn-group-toggle float-right\",\n        \"data-toggle\": \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(Button, {\n        tag: \"label\",\n        color: \"info\",\n        id: \"0\",\n        size: \"sm\",\n        className: classNames(\"btn-simple\", {\n          active: this.state.bigChartData === \"data1\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        defaultChecked: true,\n        className: \"d-none\",\n        name: \"options\",\n        type: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, \"USD\"), React.createElement(\"span\", {\n        className: \"d-block d-sm-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-single-02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        color: \"info\",\n        id: \"1\",\n        size: \"sm\",\n        tag: \"label\",\n        className: classNames(\"btn-simple\", {\n          active: this.state.bigChartData === \"data2\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"d-none\",\n        name: \"options\",\n        type: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, \"EURO\"), React.createElement(\"span\", {\n        className: \"d-block d-sm-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-gift-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        color: \"info\",\n        id: \"2\",\n        size: \"sm\",\n        tag: \"label\",\n        className: classNames(\"btn-simple\", {\n          active: this.state.bigChartData === \"data3\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"d-none\",\n        name: \"options\",\n        type: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, \"GOLD\"), React.createElement(\"span\", {\n        className: \"d-block d-sm-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-tap-02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }))))))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, \"Token amount\", React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, React.createElement(Input, {\n        defaultValue: \"\",\n        placeholder: \"0,00\",\n        type: \"text\",\n        onChange: this.handleChangeAmountTokenUSD,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        lg: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, \"ETH amount\", React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, React.createElement(Input, {\n        defaultValue: \"\",\n        placeholder: \"0,00\",\n        type: \"text\",\n        onChange: this.handleChangeETH,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }))), React.createElement(ButtonGroup, {\n        className: \"btn-group-toggle float-right\",\n        \"data-toggle\": \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-icon btn-round\",\n        color: \"success\",\n        type: \"button\",\n        onClick: this.createCP,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-cloud-upload-94\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }))))))), React.createElement(Col, {\n        lg: \"6\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, \"Collateral details\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: \"tablesorter\",\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, \"Collateral amount\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, \"Liquidation price\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, \"Current Rate\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, (this.state.CPamountETH / Math.pow(10, 18)).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }), \" ETH\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, isNaN(this.state.CPamountTokenUSD / this.state.CPamountETH) ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, \" 0,00 USD \") : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      }, (this.state.CPamountTokenUSD / Math.pow(10, 2) / this.state.CPamountETH * 1.5).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }), \" USD\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, (this.props.rateUSD / Math.pow(10, 2)).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }), \" USD\")))))))), React.createElement(Modal, {\n        modalClassName: \"modal-mini modal-danger modal-mini\",\n        isOpen: this.state.miniModal,\n        toggle: function toggle() {\n          return _this2.toggleModal(\"miniModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"close\",\n        onClick: function onClick() {\n          return _this2.toggleModal(\"miniModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-simple-remove text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"modal-profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        },\n        __self: this\n      }, \"Remove Collateral position \", this.state.dataMiniModal[0] + 1))), React.createElement(\"div\", {\n        className: \"modal-body text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      }, \"Tokens burn: \", (this.state.dataMiniModal[1] / Math.pow(10, 20)).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, \"ETH receive: \", (this.state.dataMiniModal[2] / Math.pow(10, 18)).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }), \" \")), React.createElement(\"div\", {\n        className: \"modal-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-neutral\",\n        color: \"link\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.closeCP(_this2.state.dataMiniModal[0]);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      }, \"Remove\"), React.createElement(Button, {\n        className: \"btn-neutral\",\n        color: \"link\",\n        onClick: function onClick() {\n          return _this2.toggleModal(\"miniModal\");\n        },\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }, \"Cancel\"))), React.createElement(Modal, {\n        modalClassName: \"modal-black\",\n        isOpen: this.state.formModal,\n        toggle: function toggle() {\n          return _this2.toggleModal(\"formModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"close\",\n        onClick: function onClick() {\n          return _this2.toggleModal(\"formModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-simple-remove text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"text-muted text-center ml-auto mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, \"Transfer Collateral position \", this.state.dataMiniModal[0] + 1))), React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-left text-muted mb-4 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }, \"Tokens: \", (this.state.dataMiniModal[1] / Math.pow(10, 20)).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }), \" LUSD\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, \"Collateral: \", (this.state.dataMiniModal[2] / Math.pow(10, 18)).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }), \" ETH\"))))), React.createElement(Form, {\n        role: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        className: classNames(\"input-group-alternative\", {\n          \"input-group-focus\": this.state.emailFocus\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-single-02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        placeholder: \"Receiver\",\n        type: \"text\",\n        onFocus: function onFocus(e) {\n          return _this2.setState({\n            emailFocus: true\n          });\n        },\n        onBlur: function onBlur(e) {\n          return _this2.setState({\n            emailFocus: false\n          });\n        },\n        onChange: this.handleTransferCP,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        className: \"btn-group-toggle float-right\",\n        \"data-toggle\": \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-round\",\n        color: \"success\",\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630\n        },\n        __self: this\n      }, this.state.dataMiniModal[3])))))), React.createElement(Modal, {\n        modalClassName: \"modal-black\",\n        isOpen: this.state.formModal_CP,\n        toggle: function toggle() {\n          return _this2.toggleModal(\"formModal_CP\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"close\",\n        onClick: function onClick() {\n          return _this2.toggleModal(\"formModal_CP\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-simple-remove text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"text-muted text-center ml-auto mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657\n        },\n        __self: this\n      }, \"Adjust Collateral position \", this.state.dataMiniModal[0] + 1))), React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-left text-muted mb-4 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666\n        },\n        __self: this\n      }, \"New Position\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667\n        },\n        __self: this\n      }))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672\n        },\n        __self: this\n      }, \"Tokens: \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673\n        },\n        __self: this\n      }, change_tokens.toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677\n        },\n        __self: this\n      }, \"LUSD\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682\n        },\n        __self: this\n      }, \"Collateral: \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683\n        },\n        __self: this\n      }, change_ETH.toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687\n        },\n        __self: this\n      }, \"ETH\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692\n        },\n        __self: this\n      }, \"Liquidation: \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693\n        },\n        __self: this\n      }, (change_tokens * 1 / (change_ETH * 1) * 1.5).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699\n        },\n        __self: this\n      }, \"USD\"))))), React.createElement(Form, {\n        role: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        className: classNames(\"input-group-alternative\", {\n          \"input-group-focus\": this.state.emailFocus\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-coins\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        placeholder: this.state.ChangeAmountCP,\n        type: \"text\",\n        onFocus: function onFocus(e) {\n          return _this2.setState({\n            emailFocus: true\n          });\n        },\n        onBlur: function onBlur(e) {\n          return _this2.setState({\n            emailFocus: false\n          });\n        },\n        onChange: this.handleChangeAmountCP,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        className: \"btn-group-toggle float-right\",\n        \"data-toggle\": \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-round\",\n        color: \"success\",\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730\n        },\n        __self: this\n      }, this.state.dataMiniModal[3]))))))));\n    }\n  }]);\n\n  return Vault;\n}(React.Component);\n\nexport default Vault;","map":{"version":3,"sources":["/Users/kevinfoesenek/Desktop/Linked_frontend/src/views/Vault.jsx"],"names":["React","classNames","Button","ButtonGroup","Card","CardHeader","CardBody","CardTitle","Row","Col","Table","FormGroup","Input","Modal","Label","Form","InputGroup","InputGroupAddon","InputGroupText","Vault","props","setBgChartData","name","setState","bigChartData","toggleModal","modalState","id","tokens","ETH","entry","state","createCP","receiver","web3","instanceColl","web3Available","eth","getCoinbase","then","result","methods","openCP","CPamountTokenUSD","send","from","value","CPamountETH","closeCP","filterCP","closedCPs","handleChangeETH","bind","handleChangeAmountTokenUSD","handleChangeAmountCP","handleTransferCP","miniModal","formModal","formModal_CP","dataMiniModal","ChangeAmountCP","CPTransfeReceiver","e","target","toLocaleString","useGrouping","console","log","indexCP","index","CP","rows","individualCPs","length","i","undefined","minimumFractionDigits","maximumFractionDigits","isNaN","change_tokens","change_ETH","renderTableData","rateUSD","active","emailFocus","Component"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Black Dashboard React v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  FormGroup,\n  Input,\n  Modal,\n  Label,\n  Form,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n} from \"reactstrap\";\n\nclass Vault extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChangeETH = this.handleChangeETH.bind(this);\n    this.handleChangeAmountTokenUSD = this.handleChangeAmountTokenUSD.bind(this);\n    this.handleChangeAmountCP = this.handleChangeAmountCP.bind(this);\n    this.handleTransferCP = this.handleTransferCP.bind(this);\n    this.state = {\n      bigChartData: \"data1\",\n      miniModal: false,\n      formModal: false,\n      formModal_CP: false,\n      dataMiniModal: [],\n      CPamountETH: 0,\n      CPamountTokenUSD: 0,\n      ChangeAmountCP: 0,\n      CPTransfeReceiver: \"\",\n      closedCPs: false,\n    }\n  }\n  setBgChartData = name => {\n    this.setState({\n      bigChartData: name\n    });\n  };\n  toggleModal = (modalState, id, tokens, ETH, entry) => {\n    this.setState({\n      [modalState]: !this.state[modalState],\n      dataMiniModal: [id, tokens, ETH, entry]\n    });\n  };\n  handleChangeETH(e) {\n        this.setState({CPamountETH: (e.target.value * 10**18).toLocaleString(\n          'fullwide', { useGrouping: false })});\n  }\n  handleChangeAmountTokenUSD(e) {\n        this.setState({CPamountTokenUSD: (e.target.value * 10**20).toLocaleString(\n          'fullwide', { useGrouping: false })});\n  }\n  handleChangeAmountCP(e) {\n        this.setState({ChangeAmountCP: (e.target.value).toLocaleString(\n          'fullwide', { useGrouping: false })});\n  }\n  handleTransferCP(e) {\n        this.setState({CPTransfeReceiver: (e.target.value)});\n        console.log(e.target.value);\n  }\n  createCP = receiver => {\n    const web3 = this.props.web3;\n    const instanceColl = this.props.instanceColl;\n    if (this.props.web3Available !== \"false\") {\n      web3.eth.getCoinbase().then(result =>\n        instanceColl.methods.openCP(this.state.CPamountTokenUSD).send(\n                                         {from: result,\n                                          value: this.state.CPamountETH}))};\n  };\n  closeCP = receiver => {\n    const web3 = this.props.web3;\n    const instanceColl = this.props.instanceColl;\n    if (this.props.web3Available !== \"false\") {\n      web3.eth.getCoinbase().then(result =>\n        instanceColl.methods.closeCP(receiver).send(\n                                         {from: result}))};\n  };\n  filterCP = () => {\n    this.setState({\n      closedCPs: !this.state.closedCPs});\n  }\n  renderTableData() {\n    if(this.props.indexCP > 0){\n      var index = this.props.indexCP;\n      var CP = [];\n      var rows = [];\n      if (this.props.individualCPs.length > 0) {\n        for(var i = 0; i < index; i++) {\n          CP[i+1] = this.props.individualCPs[i];\n        if(this.state.closedCPs === true) {\n          rows[i] = (\n             <tr key={i}>\n               <td>{i+1}</td>\n               <td>{CP[i+1][2] === true ? (\"closed\"):(\"open\")}</td>\n               <td>{(CP[i+1][1]/10**20).toLocaleString(\n                         undefined, {minimumFractionDigits: 2,\n                                     maximumFractionDigits:2})} LUSD\n               </td>\n               {CP[i+1][2] === true ? (<td/>):(\n               <td>\n                  <Button\n                    className=\"btn-link\"\n                    color=\"info\"\n                    onClick={this.toggleModal.bind(\"\", \"formModal_CP\", i, CP[i+1][1], CP[i+1][0], \"burn tokens\")}\n                  >\n                  burn\n                  </Button> |\n                  <Button\n                    className=\"btn-link\"\n                    color=\"info\"\n                    onClick={this.toggleModal.bind(\"\", \"formModal_CP\", i, CP[i+1][1], CP[i+1][0], \"mint tokens\")}\n                  >\n                  mint\n                  </Button>\n               </td>)}\n               <td>{(CP[i+1][0]/10**18).toLocaleString(\n                         undefined, {minimumFractionDigits: 2,\n                                     maximumFractionDigits:2})} ETH</td>\n\n               {CP[i+1][2] === true ? (<td/>):(<td>\n                  <Button\n                    className=\"btn-link\"\n                    color=\"info\"\n                    onClick={this.toggleModal.bind(\"\", \"formModal_CP\", i, CP[i+1][1], CP[i+1][0], \"deposit ETH\")}\n                  >\n                  deposit\n                  </Button> |\n                  <Button\n                    className=\"btn-link\"\n                    color=\"info\"\n                    onClick={this.toggleModal.bind(\"\", \"formModal_CP\", i, CP[i+1][1], CP[i+1][0], \"withdraw ETH\")}\n                  >\n                  withdraw\n                  </Button>\n                  </td>)}\n               <td className=\"text-center\">\n                   {isNaN((CP[i+1][1]/10**20)/(CP[i+1][0]/10**18)) ? (\n                       <div> 0,00 USD </div>\n                     ):(\n                       <div>{((CP[i+1][1]/10**20)/(CP[i+1][0]/10**18) * 1.5).toLocaleString(\n                           undefined, {minimumFractionDigits: 2,\n                                       maximumFractionDigits:2})} USD\n                       </div>\n                   )}\n               </td>\n               {CP[i+1][2] === true ? (<td/>):(<td>0,00</td>)}\n               {CP[i+1][2] === true ? (<td/>):(\n                 <td>\n                  <Button\n                    className=\"btn-link\"\n                    color=\"info\"\n                  >\n                  claim\n                  </Button>\n                 </td>)}\n               {CP[i+1][2] === true ? (<td/>):(\n                <td>\n                <Button\n                  className=\"btn-link tim-icons icon-send\"\n                  color=\"success\"\n                  onClick={this.toggleModal.bind(\"\", \"formModal\", i, CP[i+1][1], CP[i+1][0])}\n                />\n               <Button\n                 className=\"btn-link tim-icons icon-simple-remove\"\n                 color=\"danger\"\n                 onClick={this.toggleModal.bind(\"\", \"miniModal\", i, CP[i+1][1], CP[i+1][0])}\n               />\n               </td>)}\n             </tr>\n          )} else {\n          if (CP[i+1][2] === false) {\n           rows[i] = (\n              <tr key={i}>\n                <td>{i+1}</td>\n                <td>{CP[i+1][2] === true ? (\"closed\"):(\"open\")}</td>\n                <td>{(CP[i+1][1]/10**20).toLocaleString(\n                          undefined, {minimumFractionDigits: 2,\n                                      maximumFractionDigits:2})} LUSD</td>\n\n                <td>\n                <Button\n                  className=\"btn-link\"\n                  color=\"info\"\n                  onClick={this.toggleModal.bind(\"\", \"formModal_CP\", i, CP[i+1][1], CP[i+1][0], \"burn tokens\")}>\n                  burn\n                </Button> |\n                <Button\n                  className=\"btn-link\"\n                  color=\"info\"\n                  onClick={this.toggleModal.bind(\"\", \"formModal_CP\", i, CP[i+1][1], CP[i+1][0], \"mint tokens\")}>\n                  mint\n                </Button>\n                 </td>\n\n                <td>{(CP[i+1][0]/10**18).toLocaleString(\n                          undefined, {minimumFractionDigits: 2,\n                                      maximumFractionDigits:2})} ETH</td>\n\n                <td>\n                <Button\n                  className=\"btn-link\"\n                  color=\"info\"\n                  onClick={this.toggleModal.bind(\"\", \"formModal_CP\", i, CP[i+1][1], CP[i+1][0], \"deposit ETH\")}>\n                  deposit\n                </Button> |\n                <Button\n                  className=\"btn-link\"\n                  color=\"info\"\n                  onClick={this.toggleModal.bind(\"\", \"formModal_CP\", i, CP[i+1][1], CP[i+1][0], \"withdraw ETH\")}>\n                  withdraw\n                </Button>\n                </td>\n\n                <td className=\"text-center\">\n                    {isNaN((CP[i+1][1]/10**20)/(CP[i+1][0]/10**18)) ? (\n                        <div> 0,00 USD </div>\n                      ):(\n                        <div>{((CP[i+1][1]/10**20)/(CP[i+1][0]/10**18) * 1.5).toLocaleString(\n                            undefined, {minimumFractionDigits: 2,\n                                        maximumFractionDigits:2})} USD\n                        </div>\n                    )}\n                </td>\n\n                <td>0,00</td>\n                <td>\n                  <Button\n                    className=\"btn-link\"\n                    color=\"info\"\n                  >\n                  claim\n                  </Button>\n                </td>\n                <td>\n                <Button\n                  className=\"btn-link tim-icons icon-send\"\n                  color=\"success\"\n                  onClick={this.toggleModal.bind(\"\", \"formModal\", i, CP[i+1][1], CP[i+1][0], \"Transfer\")}\n                />\n                <Button\n                  className=\"btn-link tim-icons icon-simple-remove\"\n                  color=\"danger\"\n                  onClick={this.toggleModal.bind(\"\", \"miniModal\", i, CP[i+1][1], CP[i+1][0])}\n                />\n                </td>\n              </tr>\n          )}}\n\n        }} return (rows)}\n  }\n  render() {\n    var change_tokens = this.state.dataMiniModal[1]/10**20;\n    if (this.state.dataMiniModal[3] === \"burn tokens\") {\n      change_tokens = this.state.dataMiniModal[1]/10**20;\n      change_tokens = (this.state.dataMiniModal[1]/10**20 - this.state.ChangeAmountCP);\n    } else if (this.state.dataMiniModal[3] === \"mint tokens\") {\n      change_tokens = this.state.dataMiniModal[1]/10**20;\n      change_tokens = (this.state.dataMiniModal[1]/10**20 + (1*this.state.ChangeAmountCP));\n    } else {\n      change_tokens = this.state.dataMiniModal[1]/10**20;\n    }\n    var change_ETH = this.state.dataMiniModal[2]/10**18;\n    if (this.state.dataMiniModal[3] === \"deposit ETH\") {\n      change_ETH = this.state.dataMiniModal[2]/10**18;\n      change_ETH = (this.state.dataMiniModal[2]/10**18 + (1*this.state.ChangeAmountCP));\n    } else if (this.state.dataMiniModal[3] === \"withdraw ETH\") {\n      change_ETH = this.state.dataMiniModal[2]/10**18;\n      change_ETH = (this.state.dataMiniModal[2]/10**18 - this.state.ChangeAmountCP);\n    } else {\n      change_ETH = this.state.dataMiniModal[2]/10**18;\n    }\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Collateral Positions</CardTitle>\n                    <FormGroup check>\n                        <Label check>\n                            <Input\n                            type=\"checkbox\"\n                            onClick = {this.filterCP}/>\n                                <span className=\"form-check-sign\" />\n                                Show closed\n                        </Label>\n                    </FormGroup>\n              </CardHeader>\n              <Col md=\"12\">\n              <CardBody>\n                <Table className=\"tablesorter\" responsive>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      <th>ID</th>\n                      <th>Active</th>\n                      <th>Tokens</th>\n                      <th/>\n                      <th>Collateral</th>\n                      <th/>\n                      <th className=\"text-center\">Liquidation rate</th>\n                      <th>Interest</th>\n                      <th/>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {this.renderTableData()}\n                  </tbody>\n                </Table>\n                <table>\n                <tbody>\n                  <tr>\n                  <td>Current rate: {(this.props.rateUSD/10**2).toLocaleString(\n                              undefined, {minimumFractionDigits: 2,\n                                          maximumFractionDigits:2})} USD</td>\n                  </tr>\n                  <tr>\n                  <td>Interest: 1,5% per year</td>\n                  </tr>\n                </tbody>\n                </table>\n              </CardBody>\n            </Col>\n            </Card>\n          </Col>\n          </Row>\n          <Row>\n            <Col lg=\"6\" xs=\"12\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <Row>\n                    <Col className=\"text-left\" sm=\"6\">\n                      <h5 className=\"card-category\">Create Collateral Position</h5>\n                      <CardTitle tag=\"h2\">\n                        <i className=\"tim-icons icon-coins text-success\" />{\" \"}\n                        USD\n                      </CardTitle>\n                    </Col>\n                    <Col sm=\"6\">\n                      <ButtonGroup\n                        className=\"btn-group-toggle float-right\"\n                        data-toggle=\"buttons\"\n                      >\n                        <Button\n                          tag=\"label\"\n                          color=\"info\"\n                          id=\"0\"\n                          size=\"sm\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data1\"\n                          })}\n                        >\n                          <input\n                            defaultChecked\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            USD\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-single-02\" />\n                          </span>\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          id=\"1\"\n                          size=\"sm\"\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data2\"\n                          })}\n                        >\n                          <input\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            EURO\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-gift-2\" />\n                          </span>\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          id=\"2\"\n                          size=\"sm\"\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data3\"\n                          })}\n                        >\n                          <input\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            GOLD\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-tap-02\" />\n                          </span>\n                        </Button>\n                      </ButtonGroup>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Col lg=\"8\">Token amount\n                    <FormGroup>\n                      <Input\n                        defaultValue=\"\"\n                        placeholder=\"0,00\"\n                        type=\"text\"\n                        onChange={this.handleChangeAmountTokenUSD}\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col lg=\"8\">ETH amount\n                    <FormGroup>\n                      <Input\n                        defaultValue=\"\"\n                        placeholder=\"0,00\"\n                        type=\"text\"\n                        onChange={this.handleChangeETH}\n                      />\n                    </FormGroup>\n                  </Col>\n                  <ButtonGroup\n                    className=\"btn-group-toggle float-right\"\n                    data-toggle=\"buttons\"\n                  >\n                    <Col sm=\"6\">\n                    <Button\n                    className=\"btn-icon btn-round\"\n                    color=\"success\"\n                    type=\"button\"\n                    onClick={this.createCP}\n                    >\n                    <i className=\"tim-icons icon-cloud-upload-94\" />\n                    </Button>\n                    </Col>\n                  </ButtonGroup>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg=\"6\" md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">Collateral details</CardTitle>\n                </CardHeader>\n                  <CardBody>\n                  <Table className=\"tablesorter\" responsive>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        <th>Collateral amount</th>\n                        <th>Liquidation price</th>\n                        <th>Current Rate</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>{(this.state.CPamountETH / 10**18).toLocaleString(\n                                      undefined, {minimumFractionDigits: 2,\n                                                  maximumFractionDigits:2})} ETH\n                        </td>\n                        <td>{isNaN(this.state.CPamountTokenUSD/this.state.CPamountETH) ? (\n                          <div> 0,00 USD </div>\n                        ):(\n                          <div>{((this.state.CPamountTokenUSD / 10**2)/\n                          (this.state.CPamountETH) * 1.5).toLocaleString(\n                                        undefined, {minimumFractionDigits: 2,\n                                                    maximumFractionDigits:2})} USD\n                          </div>\n                        )}\n                        </td>\n                        <td>{(this.props.rateUSD/10**2).toLocaleString(\n                                      undefined, {minimumFractionDigits: 2,\n                                                  maximumFractionDigits:2})} USD\n                        </td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                  </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          {/* Start Mini Modal */}\n            <Modal\n              modalClassName=\"modal-mini modal-danger modal-mini\"\n              isOpen={this.state.miniModal}\n              toggle={() => this.toggleModal(\"miniModal\")}\n            >\n              <div className=\"modal-header justify-content-center\">\n                <button\n                  className=\"close\"\n                  onClick={() => this.toggleModal(\"miniModal\")}\n                >\n                  <i className=\"tim-icons icon-simple-remove text-white\" />\n                </button>\n                <div className=\"modal-profile\">\n                <h3 className=\"mb-0\">\n                  Remove Collateral position {this.state.dataMiniModal[0]+1}\n                </h3>\n                </div>\n              </div>\n              <div className=\"modal-body text-center\">\n                <div/>\n                <p>Tokens burn: {(this.state.dataMiniModal[1]/10**20).toLocaleString(\n                              undefined, {minimumFractionDigits: 2,\n                                          maximumFractionDigits:2})}</p>\n                <p>ETH receive: {(this.state.dataMiniModal[2]/10**18).toLocaleString(\n                              undefined, {minimumFractionDigits: 2,\n                                          maximumFractionDigits:2})} </p>\n              </div>\n              <div className=\"modal-footer\">\n                <Button\n                  className=\"btn-neutral\"\n                  color=\"link\"\n                  type=\"button\"\n                  onClick={() => this.closeCP(this.state.dataMiniModal[0])}\n                >\n                Remove\n                </Button>\n                <Button\n                  className=\"btn-neutral\"\n                  color=\"link\"\n                  onClick={() => this.toggleModal(\"miniModal\")}\n                  type=\"button\"\n                >\n                  Cancel\n                </Button>\n              </div>\n            </Modal>\n            {/* End Mini Modal */}\n            {/* Start Form Modal Transfer */}\n            <Modal\n              modalClassName=\"modal-black\"\n              isOpen={this.state.formModal}\n              toggle={() => this.toggleModal(\"formModal\")}\n            >\n              <div className=\"modal-header justify-content-center\">\n                <button\n                  className=\"close\"\n                  onClick={() => this.toggleModal(\"formModal\")}\n                >\n                  <i className=\"tim-icons icon-simple-remove text-white\" />\n                </button>\n                <div className=\"text-muted text-center ml-auto mr-auto\">\n                  <h3 className=\"mb-0\">Transfer Collateral position {\n                      this.state.dataMiniModal[0]+1}</h3>\n                </div>\n              </div>\n              <div className=\"modal-body\">\n                <div className=\"text-left text-muted mb-4 mt-3\">\n                <table>\n                <tbody>\n                  <tr>\n                    <td>Tokens: {(this.state.dataMiniModal[1]/10**20).toLocaleString(\n                                  undefined, {minimumFractionDigits: 2,\n                                              maximumFractionDigits:2})} LUSD</td>\n                  </tr>\n                  <tr>\n                    <td>Collateral: {(this.state.dataMiniModal[2]/10**18).toLocaleString(\n                                  undefined, {minimumFractionDigits: 2,\n                                              maximumFractionDigits:2})} ETH</td>\n                  </tr>\n                </tbody>\n                </table>\n                </div>\n                <Form role=\"form\">\n                  <FormGroup className=\"mb-3\">\n                    <InputGroup\n                      className={classNames(\"input-group-alternative\", {\n                        \"input-group-focus\": this.state.emailFocus\n                      })}\n                    >\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"tim-icons icon-single-02\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        placeholder=\"Receiver\"\n                        type=\"text\"\n                        onFocus={e => this.setState({ emailFocus: true })}\n                        onBlur={e => this.setState({ emailFocus: false })}\n                        onChange={this.handleTransferCP}\n                      />\n                    </InputGroup>\n                  </FormGroup>\n                  <div className=\"text-center\">\n                  <ButtonGroup\n                    className=\"btn-group-toggle float-right\"\n                    data-toggle=\"buttons\"\n                  >\n                    <Button\n                    className=\"btn-round\"\n                    color=\"success\"\n                    type=\"button\"\n                    >\n                    {this.state.dataMiniModal[3]}\n                    </Button>\n                </ButtonGroup>\n                </div>\n                </Form>\n              </div>\n            </Modal>\n            {/* End Form Modal Transfer */}\n            {/* Start Form Modal Adjust CP */}\n            <Modal\n              modalClassName=\"modal-black\"\n              isOpen={this.state.formModal_CP}\n              toggle={() => this.toggleModal(\"formModal_CP\")}\n            >\n              <div className=\"modal-header justify-content-center\">\n                <button\n                  className=\"close\"\n                  onClick={() => this.toggleModal(\"formModal_CP\")}\n                >\n                  <i className=\"tim-icons icon-simple-remove text-white\" />\n                </button>\n                <div className=\"text-muted text-center ml-auto mr-auto\">\n                  <h3 className=\"mb-0\">Adjust Collateral position {\n                      this.state.dataMiniModal[0]+1}</h3>\n                </div>\n              </div>\n              <div className=\"modal-body\">\n                <div className=\"text-left text-muted mb-4 mt-3\">\n                <table>\n                <thead className=\"text-info\">\n                  <tr>\n                    <td>New Position</td>\n                    <td></td>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>Tokens: </td>\n                    <td>{(change_tokens).toLocaleString(\n                                  undefined, {minimumFractionDigits: 2,\n                                              maximumFractionDigits:2})}\n                    </td>\n                    <td>\n                    LUSD\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Collateral: </td>\n                    <td>{(change_ETH).toLocaleString(\n                                  undefined, {minimumFractionDigits: 2,\n                                              maximumFractionDigits:2})}\n                    </td>\n                    <td>\n                    ETH\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Liquidation: </td>\n                    <td>\n                    {((change_tokens * 1)/\n                    (change_ETH * 1) * 1.5).toLocaleString(\n                                  undefined, {minimumFractionDigits: 2,\n                                              maximumFractionDigits:2})}\n                    </td>\n                    <td>USD</td>\n                  </tr>\n                </tbody>\n                </table>\n                </div>\n                <Form role=\"form\">\n                  <FormGroup className=\"mb-3\">\n                    <InputGroup\n                      className={classNames(\"input-group-alternative\", {\n                        \"input-group-focus\": this.state.emailFocus\n                      })}\n                    >\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          <i className=\"tim-icons icon-coins\" />\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        placeholder={this.state.ChangeAmountCP}\n                        type=\"text\"\n                        onFocus={e => this.setState({ emailFocus: true })}\n                        onBlur={e => this.setState({ emailFocus: false })}\n                        onChange={this.handleChangeAmountCP}\n                      />\n                    </InputGroup>\n                  </FormGroup>\n                  <div className=\"text-center\">\n                  <ButtonGroup\n                    className=\"btn-group-toggle float-right\"\n                    data-toggle=\"buttons\"\n                  >\n                    <Button\n                    className=\"btn-round\"\n                    color=\"success\"\n                    type=\"button\"\n                    >\n                    {this.state.dataMiniModal[3]}\n                    </Button>\n                </ButtonGroup>\n                </div>\n                </Form>\n              </div>\n            </Modal>\n            {/* End Form Modal Adjust CP */}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Vault;\n"]},"metadata":{},"sourceType":"module"}