{"ast":null,"code":"import _defineProperty from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/kevinfoesenek/Desktop/Linked_frontend/src/views/Vault.jsx\";\n\n/*!\n\n=========================================================\n* Black Dashboard React v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // reactstrap components\n\nimport { Button, ButtonGroup, Card, CardHeader, CardBody, CardTitle, Row, Col, Table, FormGroup, Input, Modal } from \"reactstrap\";\n\nvar Vault =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Vault, _React$Component);\n\n  function Vault(props) {\n    var _this;\n\n    _classCallCheck(this, Vault);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Vault).call(this, props));\n\n    _this.setBgChartData = function (name) {\n      _this.setState({\n        bigChartData: name\n      });\n    };\n\n    _this.toggleModal = function (modalState, id, tokens, ETH) {\n      var _this$setState;\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, modalState, !_this.state[modalState]), _defineProperty(_this$setState, \"dataModal\", [id, tokens, ETH]), _this$setState));\n\n      console.log(_this.state.dataModal);\n    };\n\n    _this.createCP = function (receiver) {\n      var web3 = _this.props.web3;\n      var instanceColl = _this.props.instanceColl;\n\n      if (_this.props.web3Available !== \"false\") {\n        web3.eth.getCoinbase().then(function (result) {\n          return instanceColl.methods.openCP(_this.state.CPamountTokenUSD).send({\n            from: result,\n            value: _this.state.CPamountETH\n          });\n        });\n      }\n\n      ;\n    };\n\n    _this.closeCP = function (receiver) {\n      var web3 = _this.props.web3;\n      var instanceColl = _this.props.instanceColl;\n\n      if (_this.props.web3Available !== \"false\") {\n        web3.eth.getCoinbase().then(function (result) {\n          return instanceColl.methods.closeCP(receiver).send({\n            from: result\n          });\n        });\n      }\n\n      ;\n    };\n\n    _this.handleChangeETH = _this.handleChangeETH.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeAmountTokenUSD = _this.handleChangeAmountTokenUSD.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      bigChartData: \"data1\",\n      miniModal: false,\n      dataModal: [],\n      CPamountETH: 0,\n      CPamountTokenUSD: 0\n    };\n    return _this;\n  }\n\n  _createClass(Vault, [{\n    key: \"handleChangeETH\",\n    value: function handleChangeETH(e) {\n      this.setState({\n        CPamountETH: (e.target.value * Math.pow(10, 18)).toLocaleString('fullwide', {\n          useGrouping: false\n        })\n      });\n    }\n  }, {\n    key: \"handleChangeAmountTokenUSD\",\n    value: function handleChangeAmountTokenUSD(e) {\n      this.setState({\n        CPamountTokenUSD: (e.target.value * Math.pow(10, 20)).toLocaleString('fullwide', {\n          useGrouping: false\n        })\n      });\n    }\n  }, {\n    key: \"renderTableData\",\n    value: function renderTableData() {\n      var CP1 = [\"0,00\", \"0,00\"];\n      var CP2 = [\"0,00\", \"0,00\"];\n      var CP3 = [\"0,00\", \"0,00\"];\n      var CP4 = [\"0,00\", \"0,00\"];\n\n      if (this.props.individualCPs.length > 0) {\n        CP1 = this.props.individualCPs[0];\n        CP2 = this.props.individualCPs[1];\n        CP3 = this.props.individualCPs[2];\n        CP4 = this.props.individualCPs[3];\n      }\n\n      ;\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, this.renderTableData(), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"6\",\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"text-left\",\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"card-category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Create Collateral Position\"), React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-coins text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }), \" \", \"USD\")), React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        className: \"btn-group-toggle float-right\",\n        \"data-toggle\": \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(Button, {\n        tag: \"label\",\n        color: \"info\",\n        id: \"0\",\n        size: \"sm\",\n        className: classNames(\"btn-simple\", {\n          active: this.state.bigChartData === \"data1\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        defaultChecked: true,\n        className: \"d-none\",\n        name: \"options\",\n        type: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"USD\"), React.createElement(\"span\", {\n        className: \"d-block d-sm-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-single-02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        color: \"info\",\n        id: \"1\",\n        size: \"sm\",\n        tag: \"label\",\n        className: classNames(\"btn-simple\", {\n          active: this.state.bigChartData === \"data2\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"d-none\",\n        name: \"options\",\n        type: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"EURO\"), React.createElement(\"span\", {\n        className: \"d-block d-sm-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-gift-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        color: \"info\",\n        id: \"2\",\n        size: \"sm\",\n        tag: \"label\",\n        className: classNames(\"btn-simple\", {\n          active: this.state.bigChartData === \"data3\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"d-none\",\n        name: \"options\",\n        type: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"d-none d-sm-block d-md-block d-lg-block d-xl-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"GOLD\"), React.createElement(\"span\", {\n        className: \"d-block d-sm-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-tap-02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }))))))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, \"Token amount\", React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(Input, {\n        defaultValue: \"\",\n        placeholder: \"0,00\",\n        type: \"text\",\n        onChange: this.handleChangeAmountTokenUSD,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        lg: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, \"ETH amount\", React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(Input, {\n        defaultValue: \"\",\n        placeholder: \"0,00\",\n        type: \"text\",\n        onChange: this.handleChangeETH,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }))), React.createElement(ButtonGroup, {\n        className: \"btn-group-toggle float-right\",\n        \"data-toggle\": \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-icon btn-round\",\n        color: \"success\",\n        type: \"button\",\n        onClick: this.createCP,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-cloud-upload-94\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }))))))), React.createElement(Col, {\n        lg: \"6\",\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, \"Collateral details\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: \"tablesorter\",\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, \"Collateral amount\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, \"Liquidation price\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, \"Current Rate\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, (this.state.CPamountETH / Math.pow(10, 18)).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }), \" ETH\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, isNaN(this.state.CPamountTokenUSD / this.state.CPamountETH) ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, \" 0,00 USD \") : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, (this.state.CPamountTokenUSD / Math.pow(10, 2) / this.state.CPamountETH * 1.5).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }), \" USD\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, (this.props.rateUSD / Math.pow(10, 2)).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }), \" USD\")))))))), React.createElement(Modal, {\n        modalClassName: \"modal-mini modal-danger modal-mini\",\n        isOpen: this.state.miniModal,\n        toggle: function toggle() {\n          return _this2.toggleModal(\"miniModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"close\",\n        onClick: function onClick() {\n          return _this2.toggleModal(\"miniModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-simple-remove text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"modal-profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-trash-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"modal-body text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, \"Close collateral position \", this.state.dataModal[0] + 1), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, \"Tokens burn: \", (this.state.dataModal[1] / Math.pow(10, 20)).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, \"ETH receive: \", (this.state.dataModal[2] / Math.pow(10, 18)).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }), \" \")), React.createElement(\"div\", {\n        className: \"modal-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-neutral\",\n        color: \"link\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this2.closeCP(_this2.state.dataModal[0]);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, \"Accept\"), React.createElement(Button, {\n        className: \"btn-neutral\",\n        color: \"link\",\n        onClick: function onClick() {\n          return _this2.toggleModal(\"miniModal\");\n        },\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, \"Close\")))));\n    }\n  }]);\n\n  return Vault;\n}(React.Component);\n\nexport default Vault;","map":{"version":3,"sources":["/Users/kevinfoesenek/Desktop/Linked_frontend/src/views/Vault.jsx"],"names":["React","classNames","Button","ButtonGroup","Card","CardHeader","CardBody","CardTitle","Row","Col","Table","FormGroup","Input","Modal","Vault","props","setBgChartData","name","setState","bigChartData","toggleModal","modalState","id","tokens","ETH","state","console","log","dataModal","createCP","receiver","web3","instanceColl","web3Available","eth","getCoinbase","then","result","methods","openCP","CPamountTokenUSD","send","from","value","CPamountETH","closeCP","handleChangeETH","bind","handleChangeAmountTokenUSD","miniModal","e","target","toLocaleString","useGrouping","CP1","CP2","CP3","CP4","individualCPs","length","renderTableData","active","undefined","minimumFractionDigits","maximumFractionDigits","isNaN","rateUSD","Component"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Black Dashboard React v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n  FormGroup,\n  Input,\n    Modal,\n} from \"reactstrap\";\n\nclass Vault extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChangeETH= this.handleChangeETH.bind(this);\n    this.handleChangeAmountTokenUSD = this.handleChangeAmountTokenUSD.bind(this);\n    this.state = {\n      bigChartData: \"data1\",\n      miniModal: false,\n      dataModal: [],\n      CPamountETH: 0,\n      CPamountTokenUSD: 0,\n    }\n  }\n  setBgChartData = name => {\n    this.setState({\n      bigChartData: name\n    });\n  };\n  toggleModal = (modalState, id, tokens, ETH) => {\n    this.setState({\n      [modalState]: !this.state[modalState],\n      dataModal: [id, tokens, ETH]\n    });\n    console.log(this.state.dataModal);\n  };\n  handleChangeETH(e) {\n        this.setState({CPamountETH: (e.target.value * 10**18).toLocaleString(\n          'fullwide', { useGrouping: false })});\n  }\n  handleChangeAmountTokenUSD(e) {\n        this.setState({CPamountTokenUSD: (e.target.value * 10**20).toLocaleString(\n          'fullwide', { useGrouping: false })});\n  }\n  createCP = receiver => {\n    const web3 = this.props.web3;\n    const instanceColl = this.props.instanceColl;\n    if (this.props.web3Available !== \"false\") {\n      web3.eth.getCoinbase().then(result =>\n        instanceColl.methods.openCP(this.state.CPamountTokenUSD).send(\n                                         {from: result,\n                                          value: this.state.CPamountETH}))};\n  };\n\n  closeCP = receiver => {\n    const web3 = this.props.web3;\n    const instanceColl = this.props.instanceColl;\n    if (this.props.web3Available !== \"false\") {\n      web3.eth.getCoinbase().then(result =>\n        instanceColl.methods.closeCP(receiver).send(\n                                         {from: result}))};\n  };\n\n\n  renderTableData() {\n    var CP1 = [\"0,00\", \"0,00\"];\n    var CP2 = [\"0,00\", \"0,00\"];\n    var CP3 = [\"0,00\", \"0,00\"];\n    var CP4 = [\"0,00\", \"0,00\"];\n    if (this.props.individualCPs.length > 0) {\n      CP1 = this.props.individualCPs[0];\n      CP2 = this.props.individualCPs[1];\n      CP3 = this.props.individualCPs[2];\n      CP4 = this.props.individualCPs[3];\n    };\n    return (\n              <tr>\n              </tr>\n           )\n     }\n\n  render() {\n\n\n  \n    return (\n      <>\n        <div className=\"content\">\n          {this.renderTableData()}\n        {/*\n          <Row>\n          <Col md=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">{this.props.indexCP} Collateral Positions</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Table className=\"tablesorter\" responsive>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      <th>ID</th>\n                      <th>Tokens</th>\n                      <th>Collateral</th>\n                      <th className=\"text-center\">Liquidation rate</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>1</td>\n                      <td>{(CP1[1]/10**20).toLocaleString(\n                                    undefined, {minimumFractionDigits: 2,\n                                                maximumFractionDigits:2})} LUSD</td>\n                      <td>{(CP1[0]/10**18).toLocaleString(\n                                    undefined, {minimumFractionDigits: 2,\n                                                maximumFractionDigits:2})} ETH</td>\n\n                      <td className=\"text-center\">\n                          {isNaN((CP1[1]/10**20)/(CP1[0]/10**18)) ? (\n                            <div> 0,00 USD </div>\n                          ):(\n                            <div>{((CP1[1]/10**20)/(CP1[0]/10**18) * 1.5).toLocaleString(\n                                          undefined, {minimumFractionDigits: 2,\n                                                      maximumFractionDigits:2})} USD\n                            </div>\n                          )}\n                      </td>\n                      <td>\n                      <Button\n                        className=\"btn-link tim-icons icon-simple-remove\"\n                        color=\"danger\"\n                        onClick={() => this.toggleModal(\"miniModal\", 0, CP1[1], CP1[0])}\n                      />\n                      </td>\n                    </tr>\n                    <tr>\n                    <td>2</td>\n                    <td>{(CP2[1]/10**20).toLocaleString(\n                                  undefined, {minimumFractionDigits: 2,\n                                              maximumFractionDigits:2})} LUSD</td>\n                    <td>{(CP2[0]/10**18).toLocaleString(\n                                  undefined, {minimumFractionDigits: 2,\n                                              maximumFractionDigits:2})} ETH</td>\n                    <td className=\"text-center\">\n                        {isNaN((CP2[1]/10**20)/(CP2[0]/10**18)) ? (\n                          <div> 0,00 USD </div>\n                        ):(\n                          <div>{((CP2[1]/10**20)/(CP2[0]/10**18) * 1.5).toLocaleString(\n                              undefined, {minimumFractionDigits: 2,\n                                          maximumFractionDigits:2})} USD\n                          </div>\n                        )}\n                    </td>\n                    <td>\n                    <Button\n                        className=\"btn-link tim-icons icon-simple-remove\"\n                        color=\"danger\"\n                        onClick={() => this.toggleModal(\"miniModal\", 1, CP2[1], CP2[0])}\n                    />\n                    </td>\n                    </tr>\n                    <tr>\n                    <td>3</td>\n                    <td>{(CP3[1]/10**20).toLocaleString(\n                                  undefined, {minimumFractionDigits: 2,\n                                              maximumFractionDigits:2})} LUSD</td>\n                    <td>{(CP3[0]/10**18).toLocaleString(\n                                  undefined, {minimumFractionDigits: 2,\n                                              maximumFractionDigits:2})} ETH</td>\n                    <td className=\"text-center\">\n                        {isNaN((CP3[1]/10**20)/(CP3[0]/10**18)) ? (\n                          <div> 0,00 USD </div>\n                        ):(\n                          <div>{((CP3[1]/10**20)/(CP3[0]/10**18) * 1.5).toLocaleString(\n                                undefined, {minimumFractionDigits: 2,\n                                            maximumFractionDigits:2})} USD\n                          </div>\n                        )}\n                    </td>\n                    <td>\n                    <Button\n                        className=\"btn-link tim-icons icon-simple-remove\"\n                        color=\"danger\"\n                        onClick={() => this.toggleModal(\"miniModal\", 2, CP3[1], CP3[0])}\n                    />\n                    </td>\n                    </tr>\n                    <tr>\n                    <td>4</td>\n                    <td>{(CP4[1]/10**20).toLocaleString(\n                                  undefined, {minimumFractionDigits: 2,\n                                              maximumFractionDigits:2})} LUSD</td>\n                    <td>{(CP4[0]/10**18).toLocaleString(\n                                  undefined, {minimumFractionDigits: 2,\n                                              maximumFractionDigits:2})} ETH</td>\n                    <td className=\"text-center\">\n                        {isNaN((CP4[1]/10**20)/(CP4[0]/10**18)) ? (\n                          <div> 0,00 USD </div>\n                        ):(\n                          <div>{((CP4[1]/10**20)/(CP4[0]/10**18) * 1.5).toLocaleString(\n                                undefined, {minimumFractionDigits: 2,\n                                            maximumFractionDigits:2})} USD\n                          </div>\n                        )}\n                    </td>\n                    <td>\n                    <Button\n                        className=\"btn-link tim-icons icon-simple-remove\"\n                        color=\"danger\"\n                        onClick={() => this.toggleModal(\"miniModal\", 2, CP4[1], CP4[0])}\n                    />\n                    </td>\n                    </tr>\n                  </tbody>\n                </Table>\n                Current rate: {(this.props.rateUSD/10**2).toLocaleString(\n                              undefined, {minimumFractionDigits: 2,\n                                          maximumFractionDigits:2})} USD\n              </CardBody>\n            </Card>\n          </Col>\n          </Row>\n          */}\n\n\n\n\n          <Row>\n            <Col lg=\"6\" xs=\"12\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <Row>\n                    <Col className=\"text-left\" sm=\"6\">\n                      <h5 className=\"card-category\">Create Collateral Position</h5>\n                      <CardTitle tag=\"h2\">\n                        <i className=\"tim-icons icon-coins text-success\" />{\" \"}\n                        USD\n                      </CardTitle>\n                    </Col>\n                    <Col sm=\"6\">\n                      <ButtonGroup\n                        className=\"btn-group-toggle float-right\"\n                        data-toggle=\"buttons\"\n                      >\n                        <Button\n                          tag=\"label\"\n                          color=\"info\"\n                          id=\"0\"\n                          size=\"sm\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data1\"\n                          })}\n                        >\n                          <input\n                            defaultChecked\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            USD\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-single-02\" />\n                          </span>\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          id=\"1\"\n                          size=\"sm\"\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data2\"\n                          })}\n                        >\n                          <input\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            EURO\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-gift-2\" />\n                          </span>\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          id=\"2\"\n                          size=\"sm\"\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data3\"\n                          })}\n                        >\n                          <input\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            GOLD\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-tap-02\" />\n                          </span>\n                        </Button>\n                      </ButtonGroup>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Col lg=\"8\">Token amount\n                    <FormGroup>\n                      <Input\n                        defaultValue=\"\"\n                        placeholder=\"0,00\"\n                        type=\"text\"\n                        onChange={this.handleChangeAmountTokenUSD}\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col lg=\"8\">ETH amount\n                    <FormGroup>\n                      <Input\n                        defaultValue=\"\"\n                        placeholder=\"0,00\"\n                        type=\"text\"\n                        onChange={this.handleChangeETH}\n                      />\n                    </FormGroup>\n                  </Col>\n                  <ButtonGroup\n                    className=\"btn-group-toggle float-right\"\n                    data-toggle=\"buttons\"\n                  >\n                    <Col sm=\"6\">\n                    <Button\n                    className=\"btn-icon btn-round\"\n                    color=\"success\"\n                    type=\"button\"\n                    onClick={this.createCP}\n                    >\n                    <i className=\"tim-icons icon-cloud-upload-94\" />\n                    </Button>\n                    </Col>\n                  </ButtonGroup>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg=\"6\" md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">Collateral details</CardTitle>\n                </CardHeader>\n                  <CardBody>\n                  <Table className=\"tablesorter\" responsive>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        <th>Collateral amount</th>\n                        <th>Liquidation price</th>\n                        <th>Current Rate</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>{(this.state.CPamountETH / 10**18).toLocaleString(\n                                      undefined, {minimumFractionDigits: 2,\n                                                  maximumFractionDigits:2})} ETH\n                        </td>\n                        <td>{isNaN(this.state.CPamountTokenUSD/this.state.CPamountETH) ? (\n                          <div> 0,00 USD </div>\n                        ):(\n                          <div>{((this.state.CPamountTokenUSD / 10**2)/\n                          (this.state.CPamountETH) * 1.5).toLocaleString(\n                                        undefined, {minimumFractionDigits: 2,\n                                                    maximumFractionDigits:2})} USD\n                          </div>\n                        )}\n                        </td>\n                        <td>{(this.props.rateUSD/10**2).toLocaleString(\n                                      undefined, {minimumFractionDigits: 2,\n                                                  maximumFractionDigits:2})} USD\n                        </td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                  </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          {/* Start Mini Modal */}\n            <Modal\n              modalClassName=\"modal-mini modal-danger modal-mini\"\n              isOpen={this.state.miniModal}\n              toggle={() => this.toggleModal(\"miniModal\")}\n            >\n              <div className=\"modal-header justify-content-center\">\n                <button\n                  className=\"close\"\n                  onClick={() => this.toggleModal(\"miniModal\")}\n                >\n                  <i className=\"tim-icons icon-simple-remove text-white\" />\n                </button>\n                <div className=\"modal-profile\">\n                  <i className=\"tim-icons icon-trash-simple\" />\n                </div>\n              </div>\n              <div className=\"modal-body text-center\">\n                <p>Close collateral position {this.state.dataModal[0]+1}</p>\n                <div/>\n                <p>Tokens burn: {(this.state.dataModal[1]/10**20).toLocaleString(\n                              undefined, {minimumFractionDigits: 2,\n                                          maximumFractionDigits:2})}</p>\n                <p>ETH receive: {(this.state.dataModal[2]/10**18).toLocaleString(\n                              undefined, {minimumFractionDigits: 2,\n                                          maximumFractionDigits:2})} </p>\n              </div>\n              <div className=\"modal-footer\">\n                <Button\n                  className=\"btn-neutral\"\n                  color=\"link\"\n                  type=\"button\"\n                  onClick={() => this.closeCP(this.state.dataModal[0])}\n                >\n                  Accept\n                </Button>\n                <Button\n                  className=\"btn-neutral\"\n                  color=\"link\"\n                  onClick={() => this.toggleModal(\"miniModal\")}\n                  type=\"button\"\n                >\n                  Close\n                </Button>\n              </div>\n            </Modal>\n            {/* End Mini Modal */}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Vault;\n"]},"metadata":{},"sourceType":"module"}