{"ast":null,"code":"import _classCallCheck from \"/Users/kevinfoesenek/Desktop/LinkedFC_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kevinfoesenek/Desktop/LinkedFC_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kevinfoesenek/Desktop/LinkedFC_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kevinfoesenek/Desktop/LinkedFC_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kevinfoesenek/Desktop/LinkedFC_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/kevinfoesenek/Desktop/LinkedFC_frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/kevinfoesenek/Desktop/LinkedFC_frontend/src/views/Exchange.jsx\";\n\n/*!\n\n=========================================================\n* Black Dashboard React v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\"; // reactstrap components\n\nimport { Button, ButtonGroup, Card, CardHeader, CardBody, CardTitle, Row, Col, FormGroup, Input, Table } from \"reactstrap\";\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.setBgChartData = function (name) {\n      _this.setState({\n        bigChartData: name\n      });\n    };\n\n    _this.buyTokens = function (receiver) {\n      var instanceExch = _this.props.instanceExch;\n\n      if (_this.props.web3Available !== \"false\") {\n        instanceExch.methods.sellETH().send({\n          from: _this.props.coinbase,\n          value: _this.state.buyAmount\n        });\n      }\n\n      ;\n    };\n\n    _this.sellTokens = function (receiver) {\n      var web3 = _this.props.web3;\n      var instanceToken = _this.props.instanceToken;\n\n      if (_this.props.web3Available !== \"false\") {\n        web3.eth.getCoinbase().then(function (result) {\n          return instanceToken.methods.approveExchange(_this.state.sellAmount).send({\n            from: result,\n            value: 0\n          });\n        });\n      }\n\n      ;\n    };\n\n    _this.claimETH = function (receiver) {\n      var web3 = _this.props.web3;\n      var instanceExch = _this.props.instanceExch;\n\n      if (_this.props.web3Available !== \"false\") {\n        web3.eth.getCoinbase().then(function (result) {\n          return instanceExch.methods.buyTKN(_this.state.buyClaimAmount).send({\n            from: result,\n            value: 0\n          });\n        });\n      }\n\n      ;\n    };\n\n    _this.claimTokens = function (receiver) {\n      var web3 = _this.props.web3;\n      var instanceExch = _this.props.instanceExch;\n\n      if (_this.props.web3Available !== \"false\") {\n        web3.eth.getCoinbase().then(function (result) {\n          return instanceExch.methods.buyETH(_this.state.sellClaimAmount).send({\n            from: result,\n            value: 0\n          });\n        });\n      }\n\n      ;\n    };\n\n    _this.handleChangeAmountBuy = _this.handleChangeAmountBuy.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeAmountSell = _this.handleChangeAmountSell.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeAmountBuyClaim = _this.handleChangeAmountBuyClaim.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeAmountSellClaim = _this.handleChangeAmountSellClaim.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      bigChartData: \"data1\",\n      buyAmount: 0,\n      sellAmount: 0,\n      buyClaimAmount: 0,\n      sellClaimAmount: 0\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"handleChangeAmountBuy\",\n    value: function handleChangeAmountBuy(e) {\n      this.setState({\n        buyAmount: (e.target.value * Math.pow(10, 18)).toLocaleString('fullwide', {\n          useGrouping: false\n        })\n      });\n    }\n  }, {\n    key: \"handleChangeAmountSell\",\n    value: function handleChangeAmountSell(e) {\n      this.setState({\n        sellAmount: (e.target.value * Math.pow(10, 20)).toLocaleString('fullwide', {\n          useGrouping: false\n        })\n      });\n    }\n  }, {\n    key: \"handleChangeAmountBuyClaim\",\n    value: function handleChangeAmountBuyClaim(e) {\n      this.setState({\n        buyClaimAmount: (e.target.value * Math.pow(10, 20)).toLocaleString('fullwide', {\n          useGrouping: false\n        })\n      });\n    }\n  }, {\n    key: \"handleChangeAmountSellClaim\",\n    value: function handleChangeAmountSellClaim(e) {\n      this.setState({\n        sellClaimAmount: (e.target.value * Math.pow(10, 18)).toLocaleString('fullwide', {\n          useGrouping: false\n        })\n      });\n    }\n  }, {\n    key: \"render\",\n    // TO DO - ADD REMOVE CLAIM\n    //  claimRemoveETH = receiver => {\n    //    const web3 = this.props.web3;\n    //    const instanceToken = this.props.instanceToken;\n    //    if (this.props.web3Available !== \"false\") {\n    //      web3.eth.getCoinbase().then(result =>\n    //        instanceToken.methods.transfer(this.state.transferReceiver,\n    //                                       this.state.transferAmount).send(\n    //                                         {from: result,\n    //                                          value: 0})\n    //                                        )};\n    //  };\n    //  claimRemoveTokens = receiver => {\n    //    const web3 = this.props.web3;\n    //    const instanceToken = this.props.instanceToken;\n    //    if (this.props.web3Available !== \"false\") {\n    //      web3.eth.getCoinbase().then(result =>\n    //        instanceToken.methods.transfer(this.state.transferReceiver,\n    //                                       this.state.transferAmount).send(\n    //                                         {from: result,\n    //                                          value: 0})\n    //                                        )};\n    //  };\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"card-category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Balance USD\"), React.createElement(CardTitle, {\n        tag: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-wallet-43 text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), \" \", isNaN(this.props.balanceTKN) ? \"0,00\" : (this.props.balanceTKN / Math.pow(10, 20)).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }), \" LUSD\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"card-category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Balance ETH: \", this.props.balanceETH))))), React.createElement(Col, {\n        lg: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Exchange liquidity\")), React.createElement(Col, {\n        md: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: \"tablesorter\",\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        className: \"text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"LUSD liquidity\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"ETH liquidity\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, this.props.liquidityTokens, \" LUSD\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, this.props.liquidityETH, \" ETH\"))))))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"6\",\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"text-left\",\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"card-category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Exchange\"), React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-coins text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), \" \", \"Deposit ETH\")))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"amount ETH\", React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Input, {\n        defaultValue: \"\",\n        placeholder: \"0,00\",\n        type: \"text\",\n        onChange: this.handleChangeAmountBuy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }))), React.createElement(ButtonGroup, {\n        className: \"btn-group-toggle float-right\",\n        \"data-toggle\": \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-icon btn-round\",\n        color: \"success\",\n        type: \"button\",\n        onClick: this.buyTokens,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-send\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }))))), React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"text-left\",\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-coins text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), \" \", \"Claim LUSD\")))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"card-category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Deposited ETH: \", (this.props.claimETH / Math.pow(10, 18)).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }))), React.createElement(\"h5\", {\n        className: \"card-category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Claim LUSD available: \", (this.props.claimETH * this.props.rateUSD / Math.pow(10, 20)).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }))), React.createElement(Col, {\n        lg: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"amount LUSD\", React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(Input, {\n        defaultValue: \"\",\n        placeholder: \"0,00\",\n        type: \"text\",\n        onChange: this.handleChangeAmountBuyClaim,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }))), React.createElement(ButtonGroup, {\n        className: \"btn-group-toggle float-right\",\n        \"data-toggle\": \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-icon btn-round\",\n        color: \"success\",\n        type: \"button\",\n        onClick: this.claimETH,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-send\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }))))))), React.createElement(Col, {\n        lg: \"6\",\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"text-left\",\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"card-category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"Exchange\"), React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-coins text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), \" \", \"Deposit LUSD\")))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"amount LUSD\", React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(Input, {\n        defaultValue: \"\",\n        placeholder: \"0,00\",\n        type: \"text\",\n        onChange: this.handleChangeAmountSell,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }))), React.createElement(ButtonGroup, {\n        className: \"btn-group-toggle float-right\",\n        \"data-toggle\": \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-icon btn-round\",\n        color: \"danger\",\n        type: \"button\",\n        onClick: this.sellTokens,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-send\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }))))), React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"text-left\",\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-coins text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }), \" \", \"Claim ETH\")))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"card-category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"Deposited LUSD:  \", isNaN(this.props.claimTokens) ? \"0,00\" : (this.props.claimTokens / Math.pow(10, 20)).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }))), React.createElement(\"h5\", {\n        className: \"card-category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \"Claim ETH available: \", isNaN(this.props.claimTokens) ? \"0,00\" : (this.props.claimTokens / this.props.rateUSD / Math.pow(10, 18)).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }))), React.createElement(Col, {\n        lg: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"amount ETH\", React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(Input, {\n        defaultValue: \"\",\n        placeholder: \"0,00\",\n        type: \"text\",\n        onChange: this.handleChangeAmountSellClaim,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }))), React.createElement(ButtonGroup, {\n        className: \"btn-group-toggle float-right\",\n        \"data-toggle\": \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn-icon btn-round\",\n        color: \"danger\",\n        type: \"button\",\n        onClick: this.claimTokens,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-send\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }))))))))));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/kevinfoesenek/Desktop/LinkedFC_frontend/src/views/Exchange.jsx"],"names":["React","Button","ButtonGroup","Card","CardHeader","CardBody","CardTitle","Row","Col","FormGroup","Input","Table","Dashboard","props","setBgChartData","name","setState","bigChartData","buyTokens","receiver","instanceExch","web3Available","methods","sellETH","send","from","coinbase","value","state","buyAmount","sellTokens","web3","instanceToken","eth","getCoinbase","then","result","approveExchange","sellAmount","claimETH","buyTKN","buyClaimAmount","claimTokens","buyETH","sellClaimAmount","handleChangeAmountBuy","bind","handleChangeAmountSell","handleChangeAmountBuyClaim","handleChangeAmountSellClaim","e","target","toLocaleString","useGrouping","isNaN","balanceTKN","undefined","minimumFractionDigits","maximumFractionDigits","balanceETH","liquidityTokens","liquidityETH","rateUSD","Component"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Black Dashboard React v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  FormGroup,\n  Input,\n  Table,\n} from \"reactstrap\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChangeAmountBuy = this.handleChangeAmountBuy.bind(this);\n    this.handleChangeAmountSell = this.handleChangeAmountSell.bind(this);\n    this.handleChangeAmountBuyClaim = this.handleChangeAmountBuyClaim.bind(this);\n    this.handleChangeAmountSellClaim = this.handleChangeAmountSellClaim.bind(this);\n    this.state = {\n      bigChartData: \"data1\",\n      buyAmount: 0,\n      sellAmount: 0,\n      buyClaimAmount: 0,\n      sellClaimAmount: 0,\n    };\n  }\n  setBgChartData = name => {\n    this.setState({\n      bigChartData: name\n    });\n  };\n  handleChangeAmountBuy(e) {\n        this.setState({buyAmount: (e.target.value * 10**18).toLocaleString(\n          'fullwide', { useGrouping: false })});\n  }\n  handleChangeAmountSell(e) {\n        this.setState({sellAmount: (e.target.value * 10**20).toLocaleString(\n          'fullwide', { useGrouping: false })});\n  }\n  handleChangeAmountBuyClaim(e) {\n        this.setState({buyClaimAmount: (e.target.value * 10**20).toLocaleString(\n          'fullwide', { useGrouping: false })});\n  }\n  handleChangeAmountSellClaim(e) {\n        this.setState({sellClaimAmount: (e.target.value * 10**18).toLocaleString(\n          'fullwide', { useGrouping: false })});\n  }\n  buyTokens = receiver => {\n    const instanceExch = this.props.instanceExch;\n    if (this.props.web3Available !== \"false\") {\n      instanceExch.methods.sellETH().send(\n                                      {from: this.props.coinbase,\n                                      value: this.state.buyAmount})\n                                      };\n  };\n  sellTokens = receiver => {\n    const web3 = this.props.web3;\n    const instanceToken = this.props.instanceToken;\n    if (this.props.web3Available !== \"false\") {\n      web3.eth.getCoinbase().then(result =>\n        instanceToken.methods.approveExchange(this.state.sellAmount).send(\n                                         {from: result,\n                                          value: 0})\n                                        )};\n  };\n  claimETH = receiver => {\n    const web3 = this.props.web3;\n    const instanceExch = this.props.instanceExch;\n    if (this.props.web3Available !== \"false\") {\n      web3.eth.getCoinbase().then(result =>\n        instanceExch.methods.buyTKN(this.state.buyClaimAmount).send(\n                                         {from: result,\n                                          value: 0})\n                                        )};\n  };\n  claimTokens = receiver => {\n    const web3 = this.props.web3;\n    const instanceExch = this.props.instanceExch;\n    if (this.props.web3Available !== \"false\") {\n      web3.eth.getCoinbase().then(result =>\n        instanceExch.methods.buyETH(this.state.sellClaimAmount).send(\n                                         {from: result,\n                                          value: 0})\n                                        )};\n  };\n\n\n\n\n// TO DO - ADD REMOVE CLAIM\n//  claimRemoveETH = receiver => {\n//    const web3 = this.props.web3;\n//    const instanceToken = this.props.instanceToken;\n//    if (this.props.web3Available !== \"false\") {\n//      web3.eth.getCoinbase().then(result =>\n//        instanceToken.methods.transfer(this.state.transferReceiver,\n//                                       this.state.transferAmount).send(\n//                                         {from: result,\n//                                          value: 0})\n//                                        )};\n//  };\n//  claimRemoveTokens = receiver => {\n//    const web3 = this.props.web3;\n//    const instanceToken = this.props.instanceToken;\n//    if (this.props.web3Available !== \"false\") {\n//      web3.eth.getCoinbase().then(result =>\n//        instanceToken.methods.transfer(this.state.transferReceiver,\n//                                       this.state.transferAmount).send(\n//                                         {from: result,\n//                                          value: 0})\n//                                        )};\n//  };\n\n\n\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n        <Row>\n          <Col lg=\"4\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <h5 className=\"card-category\">Balance USD</h5>\n                <CardTitle tag=\"h3\">\n                  <i className=\"tim-icons icon-wallet-43 text-info\" />{\" \"}\n                  {isNaN(this.props.balanceTKN) ? (\"0,00\"\n                    ):(this.props.balanceTKN/10**20).toLocaleString(\n                                undefined, {minimumFractionDigits: 2,\n                                            maximumFractionDigits:2})} LUSD\n                </CardTitle>\n              </CardHeader>\n              <CardBody>\n              <h4 className=\"card-category\"><Col lg=\"8\">Balance ETH: {this.props.balanceETH}</Col></h4>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"8\">\n          <Card>\n            <CardHeader>\n              <CardTitle tag=\"h4\">Exchange liquidity</CardTitle>\n            </CardHeader>\n            <Col md=\"12\">\n            <CardBody>\n              <Table className=\"tablesorter\" responsive>\n                <thead className=\"text-primary\">\n                  <tr>\n                    <th>LUSD liquidity</th>\n                    <th>ETH liquidity</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                   <td>{this.props.liquidityTokens} LUSD</td>\n                   <td>{this.props.liquidityETH} ETH</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </CardBody>\n          </Col>\n          </Card>\n\n          </Col>\n        </Row>\n        <Row>\n          <Col lg=\"6\" xs=\"12\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <Row>\n                  <Col className=\"text-left\" sm=\"6\">\n                    <h5 className=\"card-category\">Exchange</h5>\n                    <CardTitle tag=\"h2\">\n                      <i className=\"tim-icons icon-coins text-success\" />{\" \"}\n                      Deposit ETH\n                    </CardTitle>\n                  </Col>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <Col lg=\"8\">amount ETH\n                  <FormGroup>\n                    <Input\n                      defaultValue=\"\"\n                      placeholder=\"0,00\"\n                      type=\"text\"\n                      onChange={this.handleChangeAmountBuy}\n                    />\n                  </FormGroup>\n                </Col>\n                <ButtonGroup\n                  className=\"btn-group-toggle float-right\"\n                  data-toggle=\"buttons\"\n                >\n                  <Col sm=\"6\">\n                  <Button\n                  className=\"btn-icon btn-round\"\n                  color=\"success\"\n                  type=\"button\"\n                  onClick={this.buyTokens}\n                  >\n                  <i className=\"tim-icons icon-send\" />\n                  </Button>\n                  </Col>\n                </ButtonGroup>\n              </CardBody>\n              <CardHeader>\n                <Row>\n                  <Col className=\"text-left\" sm=\"6\">\n                    <CardTitle tag=\"h2\">\n                      <i className=\"tim-icons icon-coins text-success\" />{\" \"}\n                      Claim LUSD\n                    </CardTitle>\n                  </Col>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <h5 className=\"card-category\"><Col lg=\"8\">\n                  Deposited ETH: {(this.props.claimETH/10**18).toLocaleString(\n                                undefined, {minimumFractionDigits: 2,\n                                            maximumFractionDigits:2})}\n                </Col></h5>\n                <h5 className=\"card-category\"><Col lg=\"8\">\n                  Claim LUSD available: {(this.props.claimETH*this.props.rateUSD/10**20).toLocaleString(\n                                undefined, {minimumFractionDigits: 2,\n                                            maximumFractionDigits:2})}\n                </Col></h5>\n                <Col lg=\"8\">amount LUSD\n                  <FormGroup>\n                    <Input\n                      defaultValue=\"\"\n                      placeholder=\"0,00\"\n                      type=\"text\"\n                      onChange={this.handleChangeAmountBuyClaim}\n                    />\n                  </FormGroup>\n                </Col>\n                <ButtonGroup\n                  className=\"btn-group-toggle float-right\"\n                  data-toggle=\"buttons\"\n                >\n                  <Col sm=\"6\">\n                  <Button\n                  className=\"btn-icon btn-round\"\n                  color=\"success\"\n                  type=\"button\"\n                  onClick={this.claimETH}\n                  >\n                  <i className=\"tim-icons icon-send\" />\n                  </Button>\n                  </Col>\n                </ButtonGroup>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"6\" xs=\"12\">\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <Row>\n                  <Col className=\"text-left\" sm=\"6\">\n                    <h5 className=\"card-category\">Exchange</h5>\n                    <CardTitle tag=\"h2\">\n                      <i className=\"tim-icons icon-coins text-danger\" />{\" \"}\n                      Deposit LUSD\n                    </CardTitle>\n                  </Col>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <Col lg=\"8\">amount LUSD\n                  <FormGroup>\n                    <Input\n                      defaultValue=\"\"\n                      placeholder=\"0,00\"\n                      type=\"text\"\n                      onChange={this.handleChangeAmountSell}\n                    />\n                  </FormGroup>\n                </Col>\n                <ButtonGroup\n                  className=\"btn-group-toggle float-right\"\n                  data-toggle=\"buttons\"\n                >\n                  <Col sm=\"6\">\n                  <Button\n                  className=\"btn-icon btn-round\"\n                  color=\"danger\"\n                  type=\"button\"\n                  onClick={this.sellTokens}\n                  >\n                  <i className=\"tim-icons icon-send\" />\n                  </Button>\n                  </Col>\n                </ButtonGroup>\n              </CardBody>\n              <CardHeader>\n                <Row>\n                  <Col className=\"text-left\" sm=\"6\">\n                    <CardTitle tag=\"h2\">\n                      <i className=\"tim-icons icon-coins text-danger\" />{\" \"}\n                      Claim ETH\n                    </CardTitle>\n                  </Col>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <h5 className=\"card-category\"><Col lg=\"8\">\n                  Deposited LUSD:  {isNaN(this.props.claimTokens) ? (\"0,00\") : (\n                          (this.props.claimTokens/10**20).toLocaleString(\n                                undefined, {minimumFractionDigits: 2,\n                                            maximumFractionDigits:2}))}\n                </Col></h5>\n                <h5 className=\"card-category\"><Col lg=\"8\">\n                  Claim ETH available: {isNaN(this.props.claimTokens) ? (\"0,00\") : (\n                    (this.props.claimTokens/this.props.rateUSD/10**18).toLocaleString(\n                                undefined, {minimumFractionDigits: 2,\n                                            maximumFractionDigits:2}))}\n                </Col></h5>\n                <Col lg=\"8\">amount ETH\n                  <FormGroup>\n                    <Input\n                      defaultValue=\"\"\n                      placeholder=\"0,00\"\n                      type=\"text\"\n                      onChange={this.handleChangeAmountSellClaim}\n                    />\n                  </FormGroup>\n                </Col>\n                <ButtonGroup\n                  className=\"btn-group-toggle float-right\"\n                  data-toggle=\"buttons\"\n                >\n                  <Col sm=\"6\">\n                  <Button\n                  className=\"btn-icon btn-round\"\n                  color=\"danger\"\n                  type=\"button\"\n                  onClick={this.claimTokens}\n                  >\n                  <i className=\"tim-icons icon-send\" />\n                  </Button>\n                  </Col>\n                </ButtonGroup>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n       </div>\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}