{"ast":null,"code":"import _classCallCheck from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kevinfoesenek/Desktop/Linked_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kevinfoesenek/Desktop/Linked_frontend/src/components/Navbars/AdminNavbar.jsx\";\n\n/*!\n\n=========================================================\n* Black Dashboard React v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\";\nimport Web3 from \"web3\"; // reactstrap components\n\nimport { Collapse, DropdownToggle, DropdownMenu, DropdownItem, UncontrolledDropdown, Input, NavbarBrand, Navbar, NavLink, Nav, Container, Modal } from \"reactstrap\";\nvar web3 = \"\";\n\nvar AdminNavbar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AdminNavbar, _React$Component);\n\n  function AdminNavbar(props) {\n    var _this;\n\n    _classCallCheck(this, AdminNavbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminNavbar).call(this, props));\n\n    _this.updateColor = function () {\n      if (window.innerWidth < 993 && _this.state.collapseOpen) {\n        _this.setState({\n          color: \"bg-white\"\n        });\n      } else {\n        _this.setState({\n          color: \"navbar-transparent\"\n        });\n      }\n    };\n\n    _this.toggleCollapse = function () {\n      if (_this.state.collapseOpen) {\n        _this.setState({\n          color: \"navbar-transparent\"\n        });\n      } else {\n        _this.setState({\n          color: \"bg-white\"\n        });\n      }\n\n      _this.setState({\n        collapseOpen: !_this.state.collapseOpen\n      });\n    };\n\n    _this.toggleModalSearch = function () {\n      _this.setState({\n        modalSearch: !_this.state.modalSearch\n      });\n    };\n\n    _this.copyCodeToClipboard = function () {\n      var el = _this.textArea;\n      el.select();\n      document.execCommand(\"copy\");\n    };\n\n    _this.state = {\n      collapseOpen: false,\n      modalSearch: false,\n      color: \"navbar-transparent\",\n      web3Available: \"false\",\n      coinbase: \"0x\"\n    };\n    return _this;\n  }\n\n  _createClass(AdminNavbar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateColor);\n\n      if (window.ethereum) {\n        web3 = new Web3(window.ethereum);\n\n        try {\n          window.ethereum.enable().then(this.setState({\n            web3Available: \"true\"\n          }));\n        } catch (e) {\n          console.log(\"web3 blocked\");\n        }\n      } // Legacy DApp Browsers\n      else if (window.web3) {\n          web3 = new Web3(window.web3.currentProvider);\n          this.setState({\n            web3Available: \"true\"\n          });\n        } // Non-DApp Browsers\n        else {\n            console.log('Please install MetaMask !');\n          }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.updateColor);\n    } // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.web3Available === \"true\" && this.state.coinbase === \"0x\") {\n        //Get coinbase\n        web3.eth.getCoinbase().then(function (result) {\n          return _this2.setState({\n            coinbase: result\n          });\n        });\n      }\n\n      ;\n      console.log(\"adminnav coinbase: \" + this.state.coinbase);\n      return React.createElement(React.Fragment, null, React.createElement(Navbar, {\n        className: classNames(\"navbar-absolute\", this.state.color),\n        expand: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classNames(\"navbar-toggle d-inline\", {\n          toggled: this.props.sidebarOpened\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"navbar-toggler\",\n        type: \"button\",\n        onClick: this.props.toggleSidebar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar bar3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }))), React.createElement(NavbarBrand, {\n        href: \"#pablo\",\n        onClick: function onClick(e) {\n          return e.preventDefault();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, this.props.brandText)), React.createElement(\"button\", {\n        \"aria-expanded\": false,\n        \"aria-label\": \"Toggle navigation\",\n        className: \"navbar-toggler\",\n        \"data-target\": \"#navigation\",\n        \"data-toggle\": \"collapse\",\n        id: \"navigation\",\n        type: \"button\",\n        onClick: this.toggleCollapse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"navbar-toggler-bar navbar-kebab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), React.createElement(Collapse, {\n        navbar: true,\n        isOpen: this.state.collapseOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        className: \"ml-auto\",\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(UncontrolledDropdown, {\n        nav: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        caret: true,\n        color: \"default\",\n        \"data-toggle\": \"dropdown\",\n        nav: true,\n        onClick: function onClick(e) {\n          return e.preventDefault();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"photo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"...\",\n        src: require(\"../../assets/img/anime3.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })), React.createElement(\"b\", {\n        className: \"caret d-none d-lg-block d-xl-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"d-lg-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Log out\")), React.createElement(DropdownMenu, {\n        className: \"dropdown-navbar\",\n        right: true,\n        tag: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        tag: \"li\",\n        onClick: function onClick() {\n          return _this2.copyCodeToClipboard();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, this.state.coinbase)))), React.createElement(\"li\", {\n        className: \"separator d-lg-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }))))), React.createElement(Modal, {\n        modalClassName: \"modal-search\",\n        isOpen: this.state.modalSearch,\n        toggle: this.toggleModalSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Input, {\n        id: \"inlineFormInputGroup\",\n        placeholder: \"SEARCH\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        \"aria-label\": \"Close\",\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        type: \"button\",\n        onClick: this.toggleModalSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"tim-icons icon-simple-remove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return AdminNavbar;\n}(React.Component);\n\nexport default AdminNavbar;","map":{"version":3,"sources":["/Users/kevinfoesenek/Desktop/Linked_frontend/src/components/Navbars/AdminNavbar.jsx"],"names":["React","classNames","Web3","Collapse","DropdownToggle","DropdownMenu","DropdownItem","UncontrolledDropdown","Input","NavbarBrand","Navbar","NavLink","Nav","Container","Modal","web3","AdminNavbar","props","updateColor","window","innerWidth","state","collapseOpen","setState","color","toggleCollapse","toggleModalSearch","modalSearch","copyCodeToClipboard","el","textArea","select","document","execCommand","web3Available","coinbase","addEventListener","ethereum","enable","then","e","console","log","currentProvider","removeEventListener","eth","getCoinbase","result","toggled","sidebarOpened","toggleSidebar","preventDefault","brandText","require","Component"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Black Dashboard React v1.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\nimport Web3 from \"web3\";\n\n// reactstrap components\nimport {\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal\n} from \"reactstrap\";\n\nlet web3 = \"\";\n\nclass AdminNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapseOpen: false,\n      modalSearch: false,\n      color: \"navbar-transparent\",\n      web3Available: \"false\",\n      coinbase: \"0x\"\n    };\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor);\n    if (window.ethereum) {\n      web3 = new Web3(window.ethereum);\n      try {\n        window.ethereum.enable().then(\n          this.setState({web3Available: \"true\"}))\n      } catch(e) {\n      console.log(\"web3 blocked\")\n      }\n    }\n    // Legacy DApp Browsers\n    else if (window.web3) {\n      web3 = new Web3(window.web3.currentProvider);\n      this.setState({web3Available: \"true\"});\n    }\n    // Non-DApp Browsers\n    else {\n      console.log('Please install MetaMask !');\n    }\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateColor);\n  }\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  updateColor = () => {\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\n      this.setState({\n        color: \"bg-white\"\n      });\n    } else {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  toggleCollapse = () => {\n    if (this.state.collapseOpen) {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"bg-white\"\n      });\n    }\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // this function is to open the Search modal\n  toggleModalSearch = () => {\n    this.setState({\n      modalSearch: !this.state.modalSearch\n    });\n  };\n  copyCodeToClipboard = () => {\n    const el = this.textArea\n    el.select()\n    document.execCommand(\"copy\")\n  }\n  render() {\n\n\n    if (this.state.web3Available === \"true\"\n        && this.state.coinbase === \"0x\") {\n        //Get coinbase\n        web3.eth.getCoinbase().then(result =>\n          this.setState({coinbase: result}))\n    };\n    console.log(\"adminnav coinbase: \" + this.state.coinbase);\n\n\n    return (\n      <>\n        <Navbar\n          className={classNames(\"navbar-absolute\", this.state.color)}\n          expand=\"lg\"\n        >\n          <Container fluid>\n            <div className=\"navbar-wrapper\">\n              <div\n                className={classNames(\"navbar-toggle d-inline\", {\n                  toggled: this.props.sidebarOpened\n                })}\n              >\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={this.props.toggleSidebar}\n                >\n                  <span className=\"navbar-toggler-bar bar1\" />\n                  <span className=\"navbar-toggler-bar bar2\" />\n                  <span className=\"navbar-toggler-bar bar3\" />\n                </button>\n              </div>\n              <NavbarBrand href=\"#pablo\" onClick={e => e.preventDefault()}>\n                {this.props.brandText}\n              </NavbarBrand>\n            </div>\n            <button\n              aria-expanded={false}\n              aria-label=\"Toggle navigation\"\n              className=\"navbar-toggler\"\n              data-target=\"#navigation\"\n              data-toggle=\"collapse\"\n              id=\"navigation\"\n              type=\"button\"\n              onClick={this.toggleCollapse}\n            >\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n            </button>\n            <Collapse navbar isOpen={this.state.collapseOpen}>\n              <Nav className=\"ml-auto\" navbar>\n                <UncontrolledDropdown nav>\n                  <DropdownToggle\n                    caret\n                    color=\"default\"\n                    data-toggle=\"dropdown\"\n                    nav\n                    onClick={e => e.preventDefault()}\n                  >\n                    <div className=\"photo\">\n                      <img alt=\"...\" src={require(\"../../assets/img/anime3.png\")} />\n                    </div>\n                    <b className=\"caret d-none d-lg-block d-xl-block\" />\n                    <p className=\"d-lg-none\">Log out</p>\n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                    <NavLink tag=\"li\" onClick={() => this.copyCodeToClipboard()}>\n                      <DropdownItem className=\"nav-item\">\n                      {this.state.coinbase}\n                      </DropdownItem>\n                    </NavLink>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <li className=\"separator d-lg-none\" />\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n        <Modal\n          modalClassName=\"modal-search\"\n          isOpen={this.state.modalSearch}\n          toggle={this.toggleModalSearch}\n        >\n          <div className=\"modal-header\">\n            <Input id=\"inlineFormInputGroup\" placeholder=\"SEARCH\" type=\"text\" />\n            <button\n              aria-label=\"Close\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              type=\"button\"\n              onClick={this.toggleModalSearch}\n            >\n              <i className=\"tim-icons icon-simple-remove\" />\n            </button>\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n"]},"metadata":{},"sourceType":"module"}