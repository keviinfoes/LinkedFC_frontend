{"version":3,"file":"index.es.js","sources":["../src/constants.js","../src/MetaMask.js","../src/index.js"],"sourcesContent":["export const NOT_INSTALLED = \"MetaMask not installed\";\nexport const MISSING_PROVIDER = \"Missing provider\";\nexport const LOCKED = \"MetaMask is locked\";\nexport const TIMEOUT = \"Timeout\";\n","import Web3 from \"web3\"; // eslint-disable-line import/no-unresolved\n\nimport * as constants from \"./constants\";\n\nexport default class MetaMask {\n  static async initialize({ maxListeners } = { maxListeners: 300 }) {\n    const instance = await MetaMask.getWeb3();\n    const provider = instance.currentProvider;\n    provider.setMaxListeners(maxListeners);\n    return new MetaMask(provider);\n  }\n\n  static hasWeb3() {\n    return (\n      typeof window !== \"undefined\" && Boolean(window.ethereum || window.web3)\n    );\n  }\n\n  static async getWeb3() {\n    if (window.ethereum) {\n      // Modern dapp browsers\n      window.web3 = new window.Web3(window.ethereum);\n      await window.ethereum.enable();\n      return window.web3;\n    } else if (window.web3) {\n      // Legacy dapp browsers...\n      window.web3 = new window.Web3(window.web3.currentProvider);\n      return window.web3;\n    } else {\n      throw new Error(constants.NOT_INSTALLED);\n    }\n  }\n\n  constructor(provider) {\n    if (!provider) {\n      throw new Error(constants.MISSING_PROVIDER);\n    }\n    this.web3 = new Web3(provider);\n  }\n\n  async getWeb3() {\n    return this.web3;\n  }\n\n  async getAccounts() {\n    return new Promise((resolve, reject) => {\n      this.web3.eth.getAccounts((err, accounts) => {\n        if (err !== null) {\n          reject(err);\n        } else if (accounts.length === 0) {\n          reject(new Error(constants.LOCKED));\n        } else {\n          resolve(accounts);\n        }\n      });\n    });\n  }\n}\n","import React, { Component } from \"react\"; // eslint-disable-line import/no-unresolved\nimport PropTypes from \"prop-types\";\nimport isEqual from \"lodash/isEqual\";\nimport sortBy from \"lodash/sortBy\";\n\nimport MetaMaskClass from \"./MetaMask\";\nimport * as constants from \"./constants\";\n\nfunction isEqualArray(array1, array2) {\n  return isEqual(sortBy(array1), sortBy(array2));\n}\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || \"Component\";\n}\n\nexport async function withTimeoutRejection(promise, timeout) {\n  const sleep = new Promise((resolve, reject) =>\n    setTimeout(() => reject(new Error(constants.TIMEOUT)), timeout),\n  );\n  return Promise.race([promise, sleep]);\n}\n\nexport function createMetaMaskContext(initial = null) {\n  const Context = React.createContext(initial);\n  Context.displayName = \"MetaMaskContext\";\n\n  const ContextProvider = Context.Provider;\n\n  class MetaMaskContextProvider extends Component {\n    static propTypes = {\n      /**\n       * Initial value is an object shaped like { web3, accounts, error, awaiting }\n       */\n      value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      /**\n       * Refresh interval for MetaMask changes.\n       */\n      delay: PropTypes.number,\n      /**\n       * Prevent memory leaks by making the PopUp timeout after some time.\n       * This doesn't close the popup.\n       */\n      timeout: PropTypes.number,\n      /**\n       * Start MetaMask when loading the page.\n       */\n      immediate: PropTypes.bool,\n      /**\n       * MetaMask class initialize options\n       */\n      options: PropTypes.object,\n    };\n\n    static defaultProps = {\n      value: null,\n      delay: 3000, // retry/update every 3 seconds by default\n      timeout: 20000, // wait for user to activate MetaMask.\n      immediate: false,\n      options: undefined,\n    };\n\n    constructor(props) {\n      super(props);\n\n      this.watcher = null; // timer created with `setTimeout`\n      this.metamask = null;\n      this.state = {\n        web3: null,\n        accounts: [],\n        awaiting: false,\n        error: null,\n        ...props.value,\n      };\n    }\n\n    componentDidMount() {\n      this.setState({\n        error: MetaMaskClass.hasWeb3()\n          ? null\n          : new Error(constants.NOT_INSTALLED),\n      });\n\n      if (this.props.immediate) {\n        this.handleWatch();\n      }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      if (this.state.awaiting !== nextState.awaiting) {\n        return true;\n      } else if (this.state.web3 !== nextState.web3) {\n        return true;\n      } else if (this.state.error !== nextState.error) {\n        return true;\n      } else if (!isEqualArray(this.state.accounts, nextState.accounts)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    componentWillUnmount() {\n      if (this.watcher) {\n        clearTimeout(this.watcher);\n      }\n    }\n\n    handleWatch = async () => {\n      if (this.watcher) {\n        clearTimeout(this.watcher);\n      }\n\n      if (!this.state.web3 || !this.state.accounts.length) {\n        this.setState({ awaiting: true });\n      }\n\n      let error = this.state.error;\n      let web3 = null;\n      let accounts = [];\n\n      try {\n        const isLocked = error && error.message === constants.LOCKED;\n        if (!this.metamask || isLocked) {\n          this.metamask = await withTimeoutRejection(\n            MetaMaskClass.initialize(this.props.options),\n            this.props.timeout,\n          );\n        }\n        web3 = await this.metamask.getWeb3();\n        accounts = await this.metamask.getAccounts();\n        error = null;\n      } catch (err) {\n        error = err;\n      }\n\n      if (!error) {\n        this.watcher = setTimeout(this.handleWatch, this.props.delay);\n      }\n\n      const nextState = { web3, accounts, error, awaiting: false };\n      this.setState(nextState);\n      return nextState;\n    };\n\n    // eslint-disable-next-line camelcase\n    UNSAFE_componentWillReceiveProps(nextProps) {\n      if (!isEqual(this.props.options, nextProps.options)) {\n        this.metamask = null;\n      }\n\n      if (nextProps.immediate) {\n        this.handleWatch();\n      } else if (this.watcher) {\n        // nextProps.immediate is false so stop timeout (if present).\n        clearTimeout(this.watcher);\n      }\n    }\n\n    render() {\n      const { value, ...props } = this.props;\n\n      const internalValue = {\n        web3: this.state.web3,\n        accounts: this.state.accounts,\n        awaiting: this.state.awaiting,\n        error: this.state.error,\n        openMetaMask: this.handleWatch,\n      };\n\n      return <ContextProvider {...props} value={internalValue} />;\n    }\n  }\n\n  Context.Provider = MetaMaskContextProvider;\n  return Context;\n}\n\nexport function withMetaMask(MetaMaskContext) {\n  return function withMetaMaskContext(Comp) {\n    const ComponentWithMetaMask = React.forwardRef((props, ref) => (\n      <MetaMaskContext.Consumer>\n        {metamask => <Comp ref={ref} metamask={metamask} {...props} />}\n      </MetaMaskContext.Consumer>\n    ));\n\n    ComponentWithMetaMask.displayName = `withMetaMask(${getDisplayName(Comp)})`;\n\n    return ComponentWithMetaMask;\n  };\n}\n\nexport const PropTypesMetaMask = {\n  web3: PropTypes.object,\n  accounts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  error: PropTypes.object, // `Error` type\n  awaiting: PropTypes.bool.isRequired,\n  openMetaMask: PropTypes.func.isRequired,\n};\n\nexport const PropTypesMetaMaskObject = PropTypes.shape(PropTypesMetaMask);\n\nexport const MetaMask = MetaMaskClass;\nexport const CONSTANTS = constants;\n"],"names":["NOT_INSTALLED","MISSING_PROVIDER","LOCKED","TIMEOUT","MetaMask","initialize","maxListeners","instance","getWeb3","provider","currentProvider","setMaxListeners","hasWeb3","window","Boolean","ethereum","web3","Web3","enable","Error","constants","constructor","getAccounts","Promise","resolve","reject","eth","err","accounts","length","isEqualArray","array1","array2","isEqual","sortBy","getDisplayName","WrappedComponent","displayName","name","withTimeoutRejection","promise","timeout","sleep","setTimeout","race","createMetaMaskContext","initial","Context","React","createContext","ContextProvider","Provider","MetaMaskContextProvider","Component","props","watcher","clearTimeout","state","setState","awaiting","error","isLocked","message","metamask","MetaMaskClass","options","handleWatch","delay","nextState","value","componentDidMount","immediate","shouldComponentUpdate","nextProps","componentWillUnmount","UNSAFE_componentWillReceiveProps","render","internalValue","openMetaMask","PropTypes","any","number","bool","object","undefined","withMetaMask","MetaMaskContext","withMetaMaskContext","Comp","ComponentWithMetaMask","forwardRef","ref","PropTypesMetaMask","arrayOf","string","isRequired","func","PropTypesMetaMaskObject","shape","CONSTANTS"],"mappings":"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"}